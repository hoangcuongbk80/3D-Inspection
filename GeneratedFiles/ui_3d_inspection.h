/********************************************************************************
** Form generated from reading UI file '3D_Inspection.ui'
**
** Created by: Qt User Interface Compiler version 5.5.0
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_3D_Inspection_H
#define UI_3D_Inspection_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QDoubleSpinBox>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTextEdit>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QWidget>
#include "QVTKWidget.h"

QT_BEGIN_NAMESPACE

class Ui_3D_InspectionClass
{
public:
    QAction *actionOpen;
    QAction *actionSave;
    QAction *actionClose;
    QAction *actionDenoise;
    QAction *actionDownsample;
    QAction *actionReset_3D_View;
    QAction *actionReload_Cloud;
    QAction *actionEuclidean_Extraction;
    QAction *actionCylinder_Fitting;
    QAction *actionSubOBB_Recognition;
    QAction *actionAutoScanning;
    QAction *actionPick_and_Place;
    QAction *actionDownload;
    QAction *actionAbout_us;
    QAction *actionTestScanning;
    QAction *actionPick_and_Place_Test;
    QAction *actionDenoise_by_segment;
    QAction *actionL_Shape_Detection;
    QAction *actionShow_OBB;
    QAction *actionRecognition_Error_Report;
    QAction *actionICP_Example;
    QAction *actionSVD_Example;
    QAction *actionOBB_Recognition;
    QAction *actionTarge_Cloud;
    QAction *actionSource_Cloud;
    QAction *actionOBB_Matching;
    QAction *actionICP;
    QAction *actionRegistration_Error_Report;
    QAction *actionLoad_CAD_Model;
    QAction *actionInitial_Transformation_VirtualCam;
    QAction *actionGenerate_Database_VirtualCam;
    QAction *actionCapture;
    QAction *actionRG_SubOBB;
    QAction *actionToolTest;
    QAction *actionSphere_Detection;
    QAction *action_Regis_System_Positioning;
    QAction *actionUpsampling;
    QAction *action_AutoMode_Pause;
    QAction *action_AutoMode_Continue;
    QAction *action_rotaTable_Connect;
    QAction *action_rotaTable_Disconnect;
    QAction *action_rotaTable_Move_60_Degree;
    QAction *action_rotaTab_ZeroPos;
    QAction *actionNormals;
    QAction *action_Regis_Model_Driven;
    QAction *actionReset_Project;
    QAction *actionGenerate_Opt_Database;
    QAction *actionGennerate_NonSeg_Database;
    QAction *actionOverlap_Removal;
    QAction *action_FrameSphere_Detection;
    QAction *actionMatching;
    QAction *action_FrameBall_Detection;
    QAction *actionFrame_Matching;
    QAction *actionFrame_Based_Scan;
    QAction *actionFrame_Based_Registration;
    QAction *action_FrameScan_Start;
    QAction *action_ScanFrame_Pause;
    QAction *action_FrameScan_Continue;
    QAction *action_FrameCaliSaveTransf;
    QAction *actionDenoise_by_normals;
    QWidget *centralWidget;
    QTabWidget *Parameters;
    QWidget *tab;
    QVTKWidget *qvtkWidget;
    QGroupBox *groupBox_4;
    QVTKWidget *qvtkWidget_graph;
    QGroupBox *groupBox_5;
    QTextEdit *textEdit;
    QWidget *TCP_IP;
    QGroupBox *groupBox_7;
    QTextEdit *textEdit_Send_Kuka;
    QTextEdit *textEdit_Recieved_Kuka;
    QPushButton *bt_Listen_Kuka;
    QPushButton *bt_Origin_Kuka;
    QComboBox *comboBox_Kuka;
    QGroupBox *Manual;
    QPushButton *bt_Read_Kuka;
    QPushButton *bt_Send_Kuka;
    QPushButton *bt_Move_Kuka;
    QGroupBox *groupBox_8;
    QGroupBox *Manual_2;
    QPushButton *bt_Read_Probe;
    QPushButton *bt_Send_Probe;
    QTextEdit *textEdit_Recieved_Probe;
    QTextEdit *textEdit_Send_Probe;
    QPushButton *bt_Listen_Probe;
    QComboBox *comboBox_Probe;
    QWidget *tab_2;
    QGroupBox *groupBox;
    QGroupBox *Original_OBB;
    QDoubleSpinBox *doubleSpinBox_OBBTolerance;
    QLabel *label_OBBSizeTolerance;
    QGroupBox *groupBox_6;
    QLabel *label_12;
    QLabel *label_11;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rx_Min;
    QDoubleSpinBox *doubleSpinBox_VirCam_Ry_Min;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rz_Min;
    QLabel *label_10;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rx_Mid;
    QDoubleSpinBox *doubleSpinBox_VirCam_Ry_Mid;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rz_Mid;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rz_Incre;
    QDoubleSpinBox *doubleSpinBox_VirCam_Ry_Incre;
    QDoubleSpinBox *doubleSpinBox_VirCam_Rx_Incre;
    QLabel *Kx;
    QDoubleSpinBox *doubleSpinBox_VirCam_Kx;
    QLabel *label_13;
    QDoubleSpinBox *doubleSpinBox_VirCam_Zthresh;
    QDoubleSpinBox *doubleSpinBox_VirCam_NumOfSampleX;
    QLabel *label_14;
    QLabel *label_15;
    QTextEdit *textEdit_VirCam_modelName;
    QLabel *label_16;
    QDoubleSpinBox *doubleSpinBox_VirCam_Noise;
    QGroupBox *groupBox_11;
    QCheckBox *checkBox_VirCam_Area;
    QCheckBox *checkBox_VirCam_Dis;
    QCheckBox *checkBox_VirCam_Normal;
    QGroupBox *groupBox_12;
    QComboBox *comboBox_ObjRecog;
    QLabel *label_4;
    QDoubleSpinBox *SpinBox_passRecog;
    QGroupBox *Original_OBB_2;
    QGroupBox *groupBox_13;
    QCheckBox *checkBox_nonSeg_Recognition;
    QCheckBox *checkBox_DetecAll;
    QCheckBox *checkBox_OSubOBB_Recognition;
    QCheckBox *checkBox_SubOBB_Recognition;
    QGroupBox *groupBox_10;
    QCheckBox *checkBox_RecogFea_Area;
    QCheckBox *checkBox_RecogFea_Dis;
    QCheckBox *checkBox_RecogFea_Normal;
    QGroupBox *groupBox_14;
    QLabel *label_SubOBBSizeTolerance;
    QLabel *label_SubOBBSizeTolerance_2;
    QDoubleSpinBox *doubleSpinBox_Recog_NCCThresh;
    QDoubleSpinBox *doubleSpinBox_SubOBBToler_Up;
    QLabel *label_SubOBBSizeTolerance_3;
    QLabel *label_SubOBBSizeTolerance_4;
    QDoubleSpinBox *doubleSpinBox_SubOBBTolerance;
    QGroupBox *Denoise_5;
    QDoubleSpinBox *doubleBox_NormalScale;
    QDoubleSpinBox *doubleBox_QualityThesh;
    QDoubleSpinBox *doubleBox_NormalLevel;
    QLabel *label_OBBSizeTolerance_15;
    QLabel *label_OBBSizeTolerance_16;
    QLabel *label_OBBSizeTolerance_17;
    QGroupBox *groupBox_2;
    QGroupBox *groupBox_3;
    QDoubleSpinBox *doubleSpinBox_PickX;
    QLabel *label;
    QDoubleSpinBox *doubleSpinBox_PickY;
    QLabel *label_2;
    QDoubleSpinBox *doubleSpinBox_PickZ;
    QLabel *label_3;
    QLabel *label_9;
    QLabel *label_7;
    QLabel *label_8;
    QDoubleSpinBox *doubleSpinBox_PickRz;
    QDoubleSpinBox *doubleSpinBox_PickRy;
    QDoubleSpinBox *doubleSpinBox_PickRx;
    QCheckBox *checkBox_Host;
    QGroupBox *Denoise_2;
    QDoubleSpinBox *SpinBox_Eucli_Seg;
    QSpinBox *spinBox_minP_seg;
    QDoubleSpinBox *SpinBox_minRadius;
    QDoubleSpinBox *SpinBox_maxRadius;
    QDoubleSpinBox *SpinBox_DistThreshSeg;
    QSpinBox *spinBox_Cylinder;
    QGroupBox *Denoise_4;
    QDoubleSpinBox *doubleBox_RegisX;
    QDoubleSpinBox *doubleBox_RegisY;
    QComboBox *comboBox_Regis;
    QDoubleSpinBox *doubleBox_RegisZ;
    QDoubleSpinBox *doubleBox_RegisRZ;
    QDoubleSpinBox *doubleBox_RegisRY;
    QDoubleSpinBox *doubleBox_RegisRX;
    QDoubleSpinBox *doubleBox_Regis_toler;
    QGroupBox *groupBox_9;
    QGroupBox *Denoise;
    QDoubleSpinBox *doubleSpinBox_denoise;
    QDoubleSpinBox *SpinBox_Downsample;
    QDoubleSpinBox *doubleSpinBox_denoise_EcliSeg;
    QSpinBox *spinBox_minP_Denoise;
    QGroupBox *Denoise_3;
    QDoubleSpinBox *doubleBox_Upsampling_01;
    QDoubleSpinBox *doubleBox_Upsampling_02;
    QDoubleSpinBox *doubleBox_Upsampling_03;
    QLabel *label_OBBSizeTolerance_14;
    QGroupBox *groupBox_15;
    QGroupBox *groupBox_19;
    QDoubleSpinBox *SpinBox_ModDri_EucliSeg;
    QSpinBox *spinBox_ModDri_minPSeg;
    QDoubleSpinBox *SpinBox_ModDri_Denoise;
    QLabel *label_OBBSizeTolerance_8;
    QLabel *label_OBBSizeTolerance_9;
    QLabel *label_OBBSizeTolerance_10;
    QGroupBox *groupBox_20;
    QComboBox *comboBox_Scan_Obj;
    QCheckBox *checkBox_Scan_ICP;
    QCheckBox *checkBox_Scan_Off;
    QLabel *label_OBBSizeTolerance_11;
    QCheckBox *checkBox_Scan_ModeDriven;
    QDoubleSpinBox *doubleBox_ModDri_Overlap;
    QCheckBox *checkBox_ModDri_Save;
    QGroupBox *groupBox_16;
    QComboBox *comboBox_FrameSize_Obj;
    QGroupBox *groupBox_17;
    QLabel *label_OBBSizeTolerance_2;
    QSpinBox *spinBox_minP_Spheres;
    QSpinBox *spinBox_maxP_Spheres;
    QDoubleSpinBox *SpinBox_Frame_DistThresh;
    QLabel *label_Frame_DistThresh;
    QDoubleSpinBox *SpinBox_Frame_RadiusMin;
    QLabel *label_Frame_RadiusMin;
    QDoubleSpinBox *SpinBox_Frame_RadiusMax;
    QLabel *label_Frame_RadiusMax;
    QLabel *label_OBBSizeTolerance_3;
    QSpinBox *spinBox_minPDetected_Spheres;
    QLabel *label_OBBSizeTolerance_4;
    QGroupBox *Matching;
    QLabel *label_Frame_DistThresh_2;
    QDoubleSpinBox *SpinBox_Frame_MatchingThresh;
    QCheckBox *checkBox_FrameScan_ModeDriven;
    QCheckBox *checkBox_FrameScan_Save;
    QLabel *label_OBBSizeTolerance_12;
    QDoubleSpinBox *doubleBox_Frame_Overlap;
    QCheckBox *checkBox_FrameScan_ICP;
    QGroupBox *groupBox_18;
    QDoubleSpinBox *SpinBox_FrameEucli_Seg;
    QSpinBox *spinBox_FrameminP_seg;
    QDoubleSpinBox *SpinBox_Frame_Denoise;
    QLabel *label_OBBSizeTolerance_5;
    QLabel *label_OBBSizeTolerance_6;
    QLabel *label_OBBSizeTolerance_7;
    QDoubleSpinBox *SpinBox_FrameDenoise_Seg;
    QSpinBox *spinBox_FrameDenoise_minPSeg;
    QLabel *label_OBBSizeTolerance_13;
    QLabel *label_Frame_DistThresh_3;
    QCheckBox *checkBox_Frame_CaliFix;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuPre_Processing;
    QMenu *menuRecognition;
    QMenu *menuHelp;
    QMenu *menuSegmentation;
    QMenu *menuAuto_Mode;
    QMenu *menuTest_Mode;
    QMenu *menuFrame_Calibration_2;
    QMenu *menuFrame_Scan;
    QMenu *menuTool;
    QMenu *menuExamples;
    QMenu *menuVirtual_Camera;
    QMenu *action_Rotational_Table;
    QMenu *menuRegistration;
    QMenu *menuLoad_Point_Clouds;
    QMenu *menuCoarse_Registration;
    QMenu *menuRefine_Registration;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *3D_InspectionClass)
    {
        if (3D_InspectionClass->objectName().isEmpty())
            3D_InspectionClass->setObjectName(QStringLiteral("3D_InspectionClass"));
        3D_InspectionClass->resize(1261, 685);
        actionOpen = new QAction(3D_InspectionClass);
        actionOpen->setObjectName(QStringLiteral("actionOpen"));
        actionSave = new QAction(3D_InspectionClass);
        actionSave->setObjectName(QStringLiteral("actionSave"));
        actionClose = new QAction(3D_InspectionClass);
        actionClose->setObjectName(QStringLiteral("actionClose"));
        actionDenoise = new QAction(3D_InspectionClass);
        actionDenoise->setObjectName(QStringLiteral("actionDenoise"));
        actionDownsample = new QAction(3D_InspectionClass);
        actionDownsample->setObjectName(QStringLiteral("actionDownsample"));
        actionReset_3D_View = new QAction(3D_InspectionClass);
        actionReset_3D_View->setObjectName(QStringLiteral("actionReset_3D_View"));
        actionReload_Cloud = new QAction(3D_InspectionClass);
        actionReload_Cloud->setObjectName(QStringLiteral("actionReload_Cloud"));
        actionEuclidean_Extraction = new QAction(3D_InspectionClass);
        actionEuclidean_Extraction->setObjectName(QStringLiteral("actionEuclidean_Extraction"));
        actionCylinder_Fitting = new QAction(3D_InspectionClass);
        actionCylinder_Fitting->setObjectName(QStringLiteral("actionCylinder_Fitting"));
        actionSubOBB_Recognition = new QAction(3D_InspectionClass);
        actionSubOBB_Recognition->setObjectName(QStringLiteral("actionSubOBB_Recognition"));
        actionAutoScanning = new QAction(3D_InspectionClass);
        actionAutoScanning->setObjectName(QStringLiteral("actionAutoScanning"));
        actionPick_and_Place = new QAction(3D_InspectionClass);
        actionPick_and_Place->setObjectName(QStringLiteral("actionPick_and_Place"));
        actionDownload = new QAction(3D_InspectionClass);
        actionDownload->setObjectName(QStringLiteral("actionDownload"));
        actionAbout_us = new QAction(3D_InspectionClass);
        actionAbout_us->setObjectName(QStringLiteral("actionAbout_us"));
        actionTestScanning = new QAction(3D_InspectionClass);
        actionTestScanning->setObjectName(QStringLiteral("actionTestScanning"));
        actionPick_and_Place_Test = new QAction(3D_InspectionClass);
        actionPick_and_Place_Test->setObjectName(QStringLiteral("actionPick_and_Place_Test"));
        actionDenoise_by_segment = new QAction(3D_InspectionClass);
        actionDenoise_by_segment->setObjectName(QStringLiteral("actionDenoise_by_segment"));
        actionL_Shape_Detection = new QAction(3D_InspectionClass);
        actionL_Shape_Detection->setObjectName(QStringLiteral("actionL_Shape_Detection"));
        actionShow_OBB = new QAction(3D_InspectionClass);
        actionShow_OBB->setObjectName(QStringLiteral("actionShow_OBB"));
        actionRecognition_Error_Report = new QAction(3D_InspectionClass);
        actionRecognition_Error_Report->setObjectName(QStringLiteral("actionRecognition_Error_Report"));
        actionICP_Example = new QAction(3D_InspectionClass);
        actionICP_Example->setObjectName(QStringLiteral("actionICP_Example"));
        actionSVD_Example = new QAction(3D_InspectionClass);
        actionSVD_Example->setObjectName(QStringLiteral("actionSVD_Example"));
        actionOBB_Recognition = new QAction(3D_InspectionClass);
        actionOBB_Recognition->setObjectName(QStringLiteral("actionOBB_Recognition"));
        actionTarge_Cloud = new QAction(3D_InspectionClass);
        actionTarge_Cloud->setObjectName(QStringLiteral("actionTarge_Cloud"));
        actionSource_Cloud = new QAction(3D_InspectionClass);
        actionSource_Cloud->setObjectName(QStringLiteral("actionSource_Cloud"));
        actionOBB_Matching = new QAction(3D_InspectionClass);
        actionOBB_Matching->setObjectName(QStringLiteral("actionOBB_Matching"));
        actionICP = new QAction(3D_InspectionClass);
        actionICP->setObjectName(QStringLiteral("actionICP"));
        actionRegistration_Error_Report = new QAction(3D_InspectionClass);
        actionRegistration_Error_Report->setObjectName(QStringLiteral("actionRegistration_Error_Report"));
        actionLoad_CAD_Model = new QAction(3D_InspectionClass);
        actionLoad_CAD_Model->setObjectName(QStringLiteral("actionLoad_CAD_Model"));
        actionInitial_Transformation_VirtualCam = new QAction(3D_InspectionClass);
        actionInitial_Transformation_VirtualCam->setObjectName(QStringLiteral("actionInitial_Transformation_VirtualCam"));
        actionGenerate_Database_VirtualCam = new QAction(3D_InspectionClass);
        actionGenerate_Database_VirtualCam->setObjectName(QStringLiteral("actionGenerate_Database_VirtualCam"));
        actionCapture = new QAction(3D_InspectionClass);
        actionCapture->setObjectName(QStringLiteral("actionCapture"));
        actionRG_SubOBB = new QAction(3D_InspectionClass);
        actionRG_SubOBB->setObjectName(QStringLiteral("actionRG_SubOBB"));
        actionToolTest = new QAction(3D_InspectionClass);
        actionToolTest->setObjectName(QStringLiteral("actionToolTest"));
        actionSphere_Detection = new QAction(3D_InspectionClass);
        actionSphere_Detection->setObjectName(QStringLiteral("actionSphere_Detection"));
        action_Regis_System_Positioning = new QAction(3D_InspectionClass);
        action_Regis_System_Positioning->setObjectName(QStringLiteral("action_Regis_System_Positioning"));
        actionUpsampling = new QAction(3D_InspectionClass);
        actionUpsampling->setObjectName(QStringLiteral("actionUpsampling"));
        action_AutoMode_Pause = new QAction(3D_InspectionClass);
        action_AutoMode_Pause->setObjectName(QStringLiteral("action_AutoMode_Pause"));
        action_AutoMode_Continue = new QAction(3D_InspectionClass);
        action_AutoMode_Continue->setObjectName(QStringLiteral("action_AutoMode_Continue"));
        action_rotaTable_Connect = new QAction(3D_InspectionClass);
        action_rotaTable_Connect->setObjectName(QStringLiteral("action_rotaTable_Connect"));
        action_rotaTable_Disconnect = new QAction(3D_InspectionClass);
        action_rotaTable_Disconnect->setObjectName(QStringLiteral("action_rotaTable_Disconnect"));
        action_rotaTable_Move_60_Degree = new QAction(3D_InspectionClass);
        action_rotaTable_Move_60_Degree->setObjectName(QStringLiteral("action_rotaTable_Move_60_Degree"));
        action_rotaTab_ZeroPos = new QAction(3D_InspectionClass);
        action_rotaTab_ZeroPos->setObjectName(QStringLiteral("action_rotaTab_ZeroPos"));
        actionNormals = new QAction(3D_InspectionClass);
        actionNormals->setObjectName(QStringLiteral("actionNormals"));
        action_Regis_Model_Driven = new QAction(3D_InspectionClass);
        action_Regis_Model_Driven->setObjectName(QStringLiteral("action_Regis_Model_Driven"));
        actionReset_Project = new QAction(3D_InspectionClass);
        actionReset_Project->setObjectName(QStringLiteral("actionReset_Project"));
        actionGenerate_Opt_Database = new QAction(3D_InspectionClass);
        actionGenerate_Opt_Database->setObjectName(QStringLiteral("actionGenerate_Opt_Database"));
        actionGennerate_NonSeg_Database = new QAction(3D_InspectionClass);
        actionGennerate_NonSeg_Database->setObjectName(QStringLiteral("actionGennerate_NonSeg_Database"));
        actionOverlap_Removal = new QAction(3D_InspectionClass);
        actionOverlap_Removal->setObjectName(QStringLiteral("actionOverlap_Removal"));
        action_FrameSphere_Detection = new QAction(3D_InspectionClass);
        action_FrameSphere_Detection->setObjectName(QStringLiteral("action_FrameSphere_Detection"));
        actionMatching = new QAction(3D_InspectionClass);
        actionMatching->setObjectName(QStringLiteral("actionMatching"));
        action_FrameBall_Detection = new QAction(3D_InspectionClass);
        action_FrameBall_Detection->setObjectName(QStringLiteral("action_FrameBall_Detection"));
        actionFrame_Matching = new QAction(3D_InspectionClass);
        actionFrame_Matching->setObjectName(QStringLiteral("actionFrame_Matching"));
        actionFrame_Based_Scan = new QAction(3D_InspectionClass);
        actionFrame_Based_Scan->setObjectName(QStringLiteral("actionFrame_Based_Scan"));
        actionFrame_Based_Registration = new QAction(3D_InspectionClass);
        actionFrame_Based_Registration->setObjectName(QStringLiteral("actionFrame_Based_Registration"));
        action_FrameScan_Start = new QAction(3D_InspectionClass);
        action_FrameScan_Start->setObjectName(QStringLiteral("action_FrameScan_Start"));
        action_ScanFrame_Pause = new QAction(3D_InspectionClass);
        action_ScanFrame_Pause->setObjectName(QStringLiteral("action_ScanFrame_Pause"));
        action_FrameScan_Continue = new QAction(3D_InspectionClass);
        action_FrameScan_Continue->setObjectName(QStringLiteral("action_FrameScan_Continue"));
        action_FrameCaliSaveTransf = new QAction(3D_InspectionClass);
        action_FrameCaliSaveTransf->setObjectName(QStringLiteral("action_FrameCaliSaveTransf"));
        actionDenoise_by_normals = new QAction(3D_InspectionClass);
        actionDenoise_by_normals->setObjectName(QStringLiteral("actionDenoise_by_normals"));
        centralWidget = new QWidget(3D_InspectionClass);
        centralWidget->setObjectName(QStringLiteral("centralWidget"));
        Parameters = new QTabWidget(centralWidget);
        Parameters->setObjectName(QStringLiteral("Parameters"));
        Parameters->setGeometry(QRect(0, 0, 1261, 661));
        tab = new QWidget();
        tab->setObjectName(QStringLiteral("tab"));
        qvtkWidget = new QVTKWidget(tab);
        qvtkWidget->setObjectName(QStringLiteral("qvtkWidget"));
        qvtkWidget->setGeometry(QRect(450, 0, 821, 611));
        groupBox_4 = new QGroupBox(tab);
        groupBox_4->setObjectName(QStringLiteral("groupBox_4"));
        groupBox_4->setGeometry(QRect(0, 10, 441, 321));
        qvtkWidget_graph = new QVTKWidget(groupBox_4);
        qvtkWidget_graph->setObjectName(QStringLiteral("qvtkWidget_graph"));
        qvtkWidget_graph->setGeometry(QRect(10, 20, 421, 291));
        groupBox_5 = new QGroupBox(tab);
        groupBox_5->setObjectName(QStringLiteral("groupBox_5"));
        groupBox_5->setGeometry(QRect(0, 340, 441, 271));
        textEdit = new QTextEdit(groupBox_5);
        textEdit->setObjectName(QStringLiteral("textEdit"));
        textEdit->setGeometry(QRect(10, 20, 421, 241));
        Parameters->addTab(tab, QString());
        TCP_IP = new QWidget();
        TCP_IP->setObjectName(QStringLiteral("TCP_IP"));
        groupBox_7 = new QGroupBox(TCP_IP);
        groupBox_7->setObjectName(QStringLiteral("groupBox_7"));
        groupBox_7->setGeometry(QRect(10, 10, 621, 591));
        textEdit_Send_Kuka = new QTextEdit(groupBox_7);
        textEdit_Send_Kuka->setObjectName(QStringLiteral("textEdit_Send_Kuka"));
        textEdit_Send_Kuka->setGeometry(QRect(10, 60, 601, 271));
        textEdit_Recieved_Kuka = new QTextEdit(groupBox_7);
        textEdit_Recieved_Kuka->setObjectName(QStringLiteral("textEdit_Recieved_Kuka"));
        textEdit_Recieved_Kuka->setGeometry(QRect(10, 340, 601, 241));
        bt_Listen_Kuka = new QPushButton(groupBox_7);
        bt_Listen_Kuka->setObjectName(QStringLiteral("bt_Listen_Kuka"));
        bt_Listen_Kuka->setGeometry(QRect(10, 30, 75, 23));
        bt_Origin_Kuka = new QPushButton(groupBox_7);
        bt_Origin_Kuka->setObjectName(QStringLiteral("bt_Origin_Kuka"));
        bt_Origin_Kuka->setGeometry(QRect(90, 30, 75, 23));
        comboBox_Kuka = new QComboBox(groupBox_7);
        comboBox_Kuka->setObjectName(QStringLiteral("comboBox_Kuka"));
        comboBox_Kuka->setGeometry(QRect(260, 30, 101, 21));
        comboBox_Kuka->setMaxVisibleItems(9);
        comboBox_Kuka->setSizeAdjustPolicy(QComboBox::AdjustToContents);
        Manual = new QGroupBox(groupBox_7);
        Manual->setObjectName(QStringLiteral("Manual"));
        Manual->setGeometry(QRect(380, 10, 231, 41));
        bt_Read_Kuka = new QPushButton(Manual);
        bt_Read_Kuka->setObjectName(QStringLiteral("bt_Read_Kuka"));
        bt_Read_Kuka->setGeometry(QRect(150, 10, 75, 23));
        bt_Send_Kuka = new QPushButton(Manual);
        bt_Send_Kuka->setObjectName(QStringLiteral("bt_Send_Kuka"));
        bt_Send_Kuka->setGeometry(QRect(70, 10, 75, 23));
        bt_Move_Kuka = new QPushButton(groupBox_7);
        bt_Move_Kuka->setObjectName(QStringLiteral("bt_Move_Kuka"));
        bt_Move_Kuka->setGeometry(QRect(170, 30, 75, 23));
        groupBox_8 = new QGroupBox(TCP_IP);
        groupBox_8->setObjectName(QStringLiteral("groupBox_8"));
        groupBox_8->setGeometry(QRect(700, 10, 551, 591));
        groupBox_8->setLayoutDirection(Qt::LeftToRight);
        Manual_2 = new QGroupBox(groupBox_8);
        Manual_2->setObjectName(QStringLiteral("Manual_2"));
        Manual_2->setGeometry(QRect(300, 20, 241, 41));
        bt_Read_Probe = new QPushButton(Manual_2);
        bt_Read_Probe->setObjectName(QStringLiteral("bt_Read_Probe"));
        bt_Read_Probe->setGeometry(QRect(160, 10, 75, 23));
        bt_Send_Probe = new QPushButton(Manual_2);
        bt_Send_Probe->setObjectName(QStringLiteral("bt_Send_Probe"));
        bt_Send_Probe->setGeometry(QRect(80, 10, 75, 23));
        textEdit_Recieved_Probe = new QTextEdit(groupBox_8);
        textEdit_Recieved_Probe->setObjectName(QStringLiteral("textEdit_Recieved_Probe"));
        textEdit_Recieved_Probe->setGeometry(QRect(10, 350, 531, 231));
        textEdit_Send_Probe = new QTextEdit(groupBox_8);
        textEdit_Send_Probe->setObjectName(QStringLiteral("textEdit_Send_Probe"));
        textEdit_Send_Probe->setGeometry(QRect(10, 70, 531, 271));
        bt_Listen_Probe = new QPushButton(groupBox_8);
        bt_Listen_Probe->setObjectName(QStringLiteral("bt_Listen_Probe"));
        bt_Listen_Probe->setGeometry(QRect(10, 40, 75, 23));
        comboBox_Probe = new QComboBox(groupBox_8);
        comboBox_Probe->setObjectName(QStringLiteral("comboBox_Probe"));
        comboBox_Probe->setGeometry(QRect(100, 40, 101, 21));
        comboBox_Probe->setMaxVisibleItems(9);
        comboBox_Probe->setSizeAdjustPolicy(QComboBox::AdjustToContents);
        Parameters->addTab(TCP_IP, QString());
        tab_2 = new QWidget();
        tab_2->setObjectName(QStringLiteral("tab_2"));
        groupBox = new QGroupBox(tab_2);
        groupBox->setObjectName(QStringLiteral("groupBox"));
        groupBox->setGeometry(QRect(10, 10, 341, 591));
        Original_OBB = new QGroupBox(groupBox);
        Original_OBB->setObjectName(QStringLiteral("Original_OBB"));
        Original_OBB->setGeometry(QRect(190, 10, 141, 81));
        doubleSpinBox_OBBTolerance = new QDoubleSpinBox(Original_OBB);
        doubleSpinBox_OBBTolerance->setObjectName(QStringLiteral("doubleSpinBox_OBBTolerance"));
        doubleSpinBox_OBBTolerance->setGeometry(QRect(10, 50, 121, 22));
        doubleSpinBox_OBBTolerance->setMaximum(10000);
        doubleSpinBox_OBBTolerance->setValue(0.1);
        label_OBBSizeTolerance = new QLabel(Original_OBB);
        label_OBBSizeTolerance->setObjectName(QStringLiteral("label_OBBSizeTolerance"));
        label_OBBSizeTolerance->setGeometry(QRect(10, 20, 101, 21));
        groupBox_6 = new QGroupBox(groupBox);
        groupBox_6->setObjectName(QStringLiteral("groupBox_6"));
        groupBox_6->setGeometry(QRect(10, 240, 331, 261));
        label_12 = new QLabel(groupBox_6);
        label_12->setObjectName(QStringLiteral("label_12"));
        label_12->setGeometry(QRect(10, 80, 16, 16));
        label_11 = new QLabel(groupBox_6);
        label_11->setObjectName(QStringLiteral("label_11"));
        label_11->setGeometry(QRect(10, 50, 16, 16));
        doubleSpinBox_VirCam_Rx_Min = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rx_Min->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rx_Min"));
        doubleSpinBox_VirCam_Rx_Min->setGeometry(QRect(30, 20, 91, 22));
        doubleSpinBox_VirCam_Rx_Min->setMaximum(10000);
        doubleSpinBox_VirCam_Rx_Min->setValue(0);
        doubleSpinBox_VirCam_Ry_Min = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Ry_Min->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Ry_Min"));
        doubleSpinBox_VirCam_Ry_Min->setGeometry(QRect(30, 50, 91, 22));
        doubleSpinBox_VirCam_Ry_Min->setMaximum(10000);
        doubleSpinBox_VirCam_Ry_Min->setValue(0);
        doubleSpinBox_VirCam_Rz_Min = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rz_Min->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rz_Min"));
        doubleSpinBox_VirCam_Rz_Min->setGeometry(QRect(30, 80, 91, 22));
        doubleSpinBox_VirCam_Rz_Min->setMaximum(10000);
        doubleSpinBox_VirCam_Rz_Min->setValue(0);
        label_10 = new QLabel(groupBox_6);
        label_10->setObjectName(QStringLiteral("label_10"));
        label_10->setGeometry(QRect(10, 20, 16, 16));
        doubleSpinBox_VirCam_Rx_Mid = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rx_Mid->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rx_Mid"));
        doubleSpinBox_VirCam_Rx_Mid->setGeometry(QRect(130, 20, 91, 22));
        doubleSpinBox_VirCam_Rx_Mid->setMaximum(10000);
        doubleSpinBox_VirCam_Rx_Mid->setValue(360);
        doubleSpinBox_VirCam_Ry_Mid = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Ry_Mid->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Ry_Mid"));
        doubleSpinBox_VirCam_Ry_Mid->setGeometry(QRect(130, 50, 91, 22));
        doubleSpinBox_VirCam_Ry_Mid->setMaximum(10000);
        doubleSpinBox_VirCam_Ry_Mid->setValue(360);
        doubleSpinBox_VirCam_Rz_Mid = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rz_Mid->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rz_Mid"));
        doubleSpinBox_VirCam_Rz_Mid->setGeometry(QRect(130, 80, 91, 22));
        doubleSpinBox_VirCam_Rz_Mid->setMaximum(10000);
        doubleSpinBox_VirCam_Rz_Mid->setValue(360);
        doubleSpinBox_VirCam_Rz_Incre = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rz_Incre->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rz_Incre"));
        doubleSpinBox_VirCam_Rz_Incre->setGeometry(QRect(230, 80, 91, 22));
        doubleSpinBox_VirCam_Rz_Incre->setMaximum(10000);
        doubleSpinBox_VirCam_Rz_Incre->setValue(360);
        doubleSpinBox_VirCam_Ry_Incre = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Ry_Incre->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Ry_Incre"));
        doubleSpinBox_VirCam_Ry_Incre->setGeometry(QRect(230, 50, 91, 22));
        doubleSpinBox_VirCam_Ry_Incre->setMaximum(10000);
        doubleSpinBox_VirCam_Ry_Incre->setValue(360);
        doubleSpinBox_VirCam_Rx_Incre = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Rx_Incre->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Rx_Incre"));
        doubleSpinBox_VirCam_Rx_Incre->setGeometry(QRect(230, 20, 91, 22));
        doubleSpinBox_VirCam_Rx_Incre->setMaximum(10000);
        doubleSpinBox_VirCam_Rx_Incre->setValue(90);
        Kx = new QLabel(groupBox_6);
        Kx->setObjectName(QStringLiteral("Kx"));
        Kx->setGeometry(QRect(20, 140, 16, 20));
        doubleSpinBox_VirCam_Kx = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Kx->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Kx"));
        doubleSpinBox_VirCam_Kx->setGeometry(QRect(40, 140, 91, 22));
        doubleSpinBox_VirCam_Kx->setDecimals(0);
        doubleSpinBox_VirCam_Kx->setMaximum(10000);
        doubleSpinBox_VirCam_Kx->setValue(10);
        label_13 = new QLabel(groupBox_6);
        label_13->setObjectName(QStringLiteral("label_13"));
        label_13->setGeometry(QRect(180, 170, 41, 20));
        doubleSpinBox_VirCam_Zthresh = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Zthresh->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Zthresh"));
        doubleSpinBox_VirCam_Zthresh->setGeometry(QRect(230, 170, 91, 22));
        doubleSpinBox_VirCam_Zthresh->setMaximum(1);
        doubleSpinBox_VirCam_Zthresh->setSingleStep(0.01);
        doubleSpinBox_VirCam_Zthresh->setValue(0.8);
        doubleSpinBox_VirCam_NumOfSampleX = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_NumOfSampleX->setObjectName(QStringLiteral("doubleSpinBox_VirCam_NumOfSampleX"));
        doubleSpinBox_VirCam_NumOfSampleX->setGeometry(QRect(230, 140, 91, 22));
        doubleSpinBox_VirCam_NumOfSampleX->setDecimals(0);
        doubleSpinBox_VirCam_NumOfSampleX->setMaximum(10000);
        doubleSpinBox_VirCam_NumOfSampleX->setSingleStep(1);
        doubleSpinBox_VirCam_NumOfSampleX->setValue(20);
        label_14 = new QLabel(groupBox_6);
        label_14->setObjectName(QStringLiteral("label_14"));
        label_14->setGeometry(QRect(160, 140, 61, 20));
        label_15 = new QLabel(groupBox_6);
        label_15->setObjectName(QStringLiteral("label_15"));
        label_15->setGeometry(QRect(60, 110, 61, 20));
        textEdit_VirCam_modelName = new QTextEdit(groupBox_6);
        textEdit_VirCam_modelName->setObjectName(QStringLiteral("textEdit_VirCam_modelName"));
        textEdit_VirCam_modelName->setGeometry(QRect(130, 110, 191, 21));
        label_16 = new QLabel(groupBox_6);
        label_16->setObjectName(QStringLiteral("label_16"));
        label_16->setGeometry(QRect(10, 170, 41, 20));
        doubleSpinBox_VirCam_Noise = new QDoubleSpinBox(groupBox_6);
        doubleSpinBox_VirCam_Noise->setObjectName(QStringLiteral("doubleSpinBox_VirCam_Noise"));
        doubleSpinBox_VirCam_Noise->setGeometry(QRect(40, 170, 91, 22));
        doubleSpinBox_VirCam_Noise->setMaximum(10000);
        doubleSpinBox_VirCam_Noise->setSingleStep(0.01);
        doubleSpinBox_VirCam_Noise->setValue(3);
        groupBox_11 = new QGroupBox(groupBox_6);
        groupBox_11->setObjectName(QStringLiteral("groupBox_11"));
        groupBox_11->setGeometry(QRect(10, 200, 321, 51));
        checkBox_VirCam_Area = new QCheckBox(groupBox_11);
        checkBox_VirCam_Area->setObjectName(QStringLiteral("checkBox_VirCam_Area"));
        checkBox_VirCam_Area->setGeometry(QRect(10, 20, 70, 17));
        checkBox_VirCam_Area->setChecked(true);
        checkBox_VirCam_Dis = new QCheckBox(groupBox_11);
        checkBox_VirCam_Dis->setObjectName(QStringLiteral("checkBox_VirCam_Dis"));
        checkBox_VirCam_Dis->setGeometry(QRect(70, 20, 70, 17));
        checkBox_VirCam_Dis->setChecked(true);
        checkBox_VirCam_Normal = new QCheckBox(groupBox_11);
        checkBox_VirCam_Normal->setObjectName(QStringLiteral("checkBox_VirCam_Normal"));
        checkBox_VirCam_Normal->setGeometry(QRect(150, 20, 70, 17));
        checkBox_VirCam_Normal->setChecked(true);
        groupBox_12 = new QGroupBox(groupBox);
        groupBox_12->setObjectName(QStringLiteral("groupBox_12"));
        groupBox_12->setGeometry(QRect(10, 20, 171, 71));
        comboBox_ObjRecog = new QComboBox(groupBox_12);
        comboBox_ObjRecog->setObjectName(QStringLiteral("comboBox_ObjRecog"));
        comboBox_ObjRecog->setGeometry(QRect(10, 40, 151, 22));
        label_4 = new QLabel(groupBox_12);
        label_4->setObjectName(QStringLiteral("label_4"));
        label_4->setGeometry(QRect(10, 10, 61, 20));
        SpinBox_passRecog = new QDoubleSpinBox(groupBox_12);
        SpinBox_passRecog->setObjectName(QStringLiteral("SpinBox_passRecog"));
        SpinBox_passRecog->setGeometry(QRect(70, 10, 91, 22));
        SpinBox_passRecog->setMinimum(-1e+08);
        SpinBox_passRecog->setMaximum(1e+08);
        SpinBox_passRecog->setSingleStep(0.1);
        SpinBox_passRecog->setValue(0.8);
        Original_OBB_2 = new QGroupBox(groupBox);
        Original_OBB_2->setObjectName(QStringLiteral("Original_OBB_2"));
        Original_OBB_2->setGeometry(QRect(10, 90, 321, 141));
        groupBox_13 = new QGroupBox(Original_OBB_2);
        groupBox_13->setObjectName(QStringLiteral("groupBox_13"));
        groupBox_13->setGeometry(QRect(10, 20, 171, 41));
        checkBox_nonSeg_Recognition = new QCheckBox(groupBox_13);
        checkBox_nonSeg_Recognition->setObjectName(QStringLiteral("checkBox_nonSeg_Recognition"));
        checkBox_nonSeg_Recognition->setEnabled(true);
        checkBox_nonSeg_Recognition->setGeometry(QRect(90, 20, 91, 20));
        checkBox_nonSeg_Recognition->setChecked(false);
        checkBox_DetecAll = new QCheckBox(groupBox_13);
        checkBox_DetecAll->setObjectName(QStringLiteral("checkBox_DetecAll"));
        checkBox_DetecAll->setGeometry(QRect(10, 0, 70, 17));
        checkBox_OSubOBB_Recognition = new QCheckBox(groupBox_13);
        checkBox_OSubOBB_Recognition->setObjectName(QStringLiteral("checkBox_OSubOBB_Recognition"));
        checkBox_OSubOBB_Recognition->setEnabled(true);
        checkBox_OSubOBB_Recognition->setGeometry(QRect(90, 0, 81, 20));
        checkBox_OSubOBB_Recognition->setCheckable(true);
        checkBox_OSubOBB_Recognition->setChecked(true);
        checkBox_SubOBB_Recognition = new QCheckBox(groupBox_13);
        checkBox_SubOBB_Recognition->setObjectName(QStringLiteral("checkBox_SubOBB_Recognition"));
        checkBox_SubOBB_Recognition->setGeometry(QRect(10, 20, 70, 17));
        groupBox_10 = new QGroupBox(Original_OBB_2);
        groupBox_10->setObjectName(QStringLiteral("groupBox_10"));
        groupBox_10->setGeometry(QRect(190, 10, 121, 51));
        checkBox_RecogFea_Area = new QCheckBox(groupBox_10);
        checkBox_RecogFea_Area->setObjectName(QStringLiteral("checkBox_RecogFea_Area"));
        checkBox_RecogFea_Area->setGeometry(QRect(10, 30, 41, 17));
        checkBox_RecogFea_Area->setChecked(true);
        checkBox_RecogFea_Dis = new QCheckBox(groupBox_10);
        checkBox_RecogFea_Dis->setObjectName(QStringLiteral("checkBox_RecogFea_Dis"));
        checkBox_RecogFea_Dis->setGeometry(QRect(60, 10, 61, 17));
        checkBox_RecogFea_Normal = new QCheckBox(groupBox_10);
        checkBox_RecogFea_Normal->setObjectName(QStringLiteral("checkBox_RecogFea_Normal"));
        checkBox_RecogFea_Normal->setGeometry(QRect(60, 30, 61, 17));
        groupBox_14 = new QGroupBox(Original_OBB_2);
        groupBox_14->setObjectName(QStringLiteral("groupBox_14"));
        groupBox_14->setGeometry(QRect(10, 70, 301, 61));
        label_SubOBBSizeTolerance = new QLabel(groupBox_14);
        label_SubOBBSizeTolerance->setObjectName(QStringLiteral("label_SubOBBSizeTolerance"));
        label_SubOBBSizeTolerance->setGeometry(QRect(140, 0, 111, 21));
        label_SubOBBSizeTolerance_2 = new QLabel(groupBox_14);
        label_SubOBBSizeTolerance_2->setObjectName(QStringLiteral("label_SubOBBSizeTolerance_2"));
        label_SubOBBSizeTolerance_2->setGeometry(QRect(10, 10, 61, 20));
        doubleSpinBox_Recog_NCCThresh = new QDoubleSpinBox(groupBox_14);
        doubleSpinBox_Recog_NCCThresh->setObjectName(QStringLiteral("doubleSpinBox_Recog_NCCThresh"));
        doubleSpinBox_Recog_NCCThresh->setGeometry(QRect(10, 30, 91, 22));
        doubleSpinBox_Recog_NCCThresh->setMinimum(-100000);
        doubleSpinBox_Recog_NCCThresh->setMaximum(10000);
        doubleSpinBox_Recog_NCCThresh->setValue(-1);
        doubleSpinBox_SubOBBToler_Up = new QDoubleSpinBox(groupBox_14);
        doubleSpinBox_SubOBBToler_Up->setObjectName(QStringLiteral("doubleSpinBox_SubOBBToler_Up"));
        doubleSpinBox_SubOBBToler_Up->setGeometry(QRect(120, 30, 71, 22));
        doubleSpinBox_SubOBBToler_Up->setMaximum(10000);
        doubleSpinBox_SubOBBToler_Up->setValue(0.25);
        label_SubOBBSizeTolerance_3 = new QLabel(groupBox_14);
        label_SubOBBSizeTolerance_3->setObjectName(QStringLiteral("label_SubOBBSizeTolerance_3"));
        label_SubOBBSizeTolerance_3->setGeometry(QRect(120, 10, 21, 21));
        label_SubOBBSizeTolerance_4 = new QLabel(groupBox_14);
        label_SubOBBSizeTolerance_4->setObjectName(QStringLiteral("label_SubOBBSizeTolerance_4"));
        label_SubOBBSizeTolerance_4->setGeometry(QRect(260, 10, 31, 21));
        doubleSpinBox_SubOBBTolerance = new QDoubleSpinBox(groupBox_14);
        doubleSpinBox_SubOBBTolerance->setObjectName(QStringLiteral("doubleSpinBox_SubOBBTolerance"));
        doubleSpinBox_SubOBBTolerance->setGeometry(QRect(220, 30, 71, 22));
        doubleSpinBox_SubOBBTolerance->setMaximum(10000);
        doubleSpinBox_SubOBBTolerance->setValue(0.5);
        Denoise_5 = new QGroupBox(groupBox);
        Denoise_5->setObjectName(QStringLiteral("Denoise_5"));
        Denoise_5->setGeometry(QRect(10, 510, 321, 71));
        Denoise_5->setAutoFillBackground(false);
        doubleBox_NormalScale = new QDoubleSpinBox(Denoise_5);
        doubleBox_NormalScale->setObjectName(QStringLiteral("doubleBox_NormalScale"));
        doubleBox_NormalScale->setGeometry(QRect(90, 40, 81, 22));
        doubleBox_NormalScale->setMaximum(1e+06);
        doubleBox_NormalScale->setValue(10);
        doubleBox_QualityThesh = new QDoubleSpinBox(Denoise_5);
        doubleBox_QualityThesh->setObjectName(QStringLiteral("doubleBox_QualityThesh"));
        doubleBox_QualityThesh->setGeometry(QRect(180, 40, 71, 22));
        doubleBox_QualityThesh->setMaximum(1e+06);
        doubleBox_QualityThesh->setValue(0.8);
        doubleBox_NormalLevel = new QDoubleSpinBox(Denoise_5);
        doubleBox_NormalLevel->setObjectName(QStringLiteral("doubleBox_NormalLevel"));
        doubleBox_NormalLevel->setGeometry(QRect(10, 40, 71, 22));
        doubleBox_NormalLevel->setDecimals(2);
        doubleBox_NormalLevel->setMinimum(-1e+08);
        doubleBox_NormalLevel->setMaximum(1e+06);
        doubleBox_NormalLevel->setValue(1);
        label_OBBSizeTolerance_15 = new QLabel(Denoise_5);
        label_OBBSizeTolerance_15->setObjectName(QStringLiteral("label_OBBSizeTolerance_15"));
        label_OBBSizeTolerance_15->setGeometry(QRect(10, 20, 61, 21));
        label_OBBSizeTolerance_16 = new QLabel(Denoise_5);
        label_OBBSizeTolerance_16->setObjectName(QStringLiteral("label_OBBSizeTolerance_16"));
        label_OBBSizeTolerance_16->setGeometry(QRect(90, 20, 61, 21));
        label_OBBSizeTolerance_17 = new QLabel(Denoise_5);
        label_OBBSizeTolerance_17->setObjectName(QStringLiteral("label_OBBSizeTolerance_17"));
        label_OBBSizeTolerance_17->setGeometry(QRect(180, 20, 61, 21));
        groupBox_2 = new QGroupBox(tab_2);
        groupBox_2->setObjectName(QStringLiteral("groupBox_2"));
        groupBox_2->setGeometry(QRect(360, 440, 281, 161));
        groupBox_3 = new QGroupBox(groupBox_2);
        groupBox_3->setObjectName(QStringLiteral("groupBox_3"));
        groupBox_3->setGeometry(QRect(10, 20, 261, 141));
        doubleSpinBox_PickX = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickX->setObjectName(QStringLiteral("doubleSpinBox_PickX"));
        doubleSpinBox_PickX->setGeometry(QRect(30, 30, 101, 22));
        doubleSpinBox_PickX->setMaximum(100000);
        doubleSpinBox_PickX->setValue(530);
        label = new QLabel(groupBox_3);
        label->setObjectName(QStringLiteral("label"));
        label->setGeometry(QRect(20, 30, 16, 16));
        doubleSpinBox_PickY = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickY->setObjectName(QStringLiteral("doubleSpinBox_PickY"));
        doubleSpinBox_PickY->setGeometry(QRect(30, 60, 101, 22));
        doubleSpinBox_PickY->setMaximum(100000);
        doubleSpinBox_PickY->setValue(70);
        label_2 = new QLabel(groupBox_3);
        label_2->setObjectName(QStringLiteral("label_2"));
        label_2->setGeometry(QRect(20, 60, 16, 16));
        doubleSpinBox_PickZ = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickZ->setObjectName(QStringLiteral("doubleSpinBox_PickZ"));
        doubleSpinBox_PickZ->setGeometry(QRect(30, 90, 101, 22));
        doubleSpinBox_PickZ->setMaximum(100000);
        doubleSpinBox_PickZ->setValue(563.5);
        label_3 = new QLabel(groupBox_3);
        label_3->setObjectName(QStringLiteral("label_3"));
        label_3->setGeometry(QRect(20, 90, 16, 16));
        label_9 = new QLabel(groupBox_3);
        label_9->setObjectName(QStringLiteral("label_9"));
        label_9->setGeometry(QRect(140, 60, 16, 16));
        label_7 = new QLabel(groupBox_3);
        label_7->setObjectName(QStringLiteral("label_7"));
        label_7->setGeometry(QRect(140, 30, 16, 16));
        label_8 = new QLabel(groupBox_3);
        label_8->setObjectName(QStringLiteral("label_8"));
        label_8->setGeometry(QRect(140, 90, 16, 16));
        doubleSpinBox_PickRz = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickRz->setObjectName(QStringLiteral("doubleSpinBox_PickRz"));
        doubleSpinBox_PickRz->setGeometry(QRect(160, 90, 101, 22));
        doubleSpinBox_PickRz->setMaximum(10000);
        doubleSpinBox_PickRz->setValue(179.44);
        doubleSpinBox_PickRy = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickRy->setObjectName(QStringLiteral("doubleSpinBox_PickRy"));
        doubleSpinBox_PickRy->setGeometry(QRect(160, 60, 101, 22));
        doubleSpinBox_PickRy->setMaximum(10000);
        doubleSpinBox_PickRy->setValue(0);
        doubleSpinBox_PickRx = new QDoubleSpinBox(groupBox_3);
        doubleSpinBox_PickRx->setObjectName(QStringLiteral("doubleSpinBox_PickRx"));
        doubleSpinBox_PickRx->setGeometry(QRect(160, 30, 101, 22));
        doubleSpinBox_PickRx->setMaximum(10000);
        doubleSpinBox_PickRx->setValue(180);
        checkBox_Host = new QCheckBox(groupBox_3);
        checkBox_Host->setObjectName(QStringLiteral("checkBox_Host"));
        checkBox_Host->setGeometry(QRect(20, 120, 70, 17));
        checkBox_Host->setChecked(true);
        Denoise_2 = new QGroupBox(tab_2);
        Denoise_2->setObjectName(QStringLiteral("Denoise_2"));
        Denoise_2->setGeometry(QRect(360, 10, 281, 111));
        Denoise_2->setAutoFillBackground(false);
        SpinBox_Eucli_Seg = new QDoubleSpinBox(Denoise_2);
        SpinBox_Eucli_Seg->setObjectName(QStringLiteral("SpinBox_Eucli_Seg"));
        SpinBox_Eucli_Seg->setGeometry(QRect(20, 20, 121, 22));
        SpinBox_Eucli_Seg->setMinimum(-1e+06);
        SpinBox_Eucli_Seg->setMaximum(1e+07);
        SpinBox_Eucli_Seg->setValue(5);
        spinBox_minP_seg = new QSpinBox(Denoise_2);
        spinBox_minP_seg->setObjectName(QStringLiteral("spinBox_minP_seg"));
        spinBox_minP_seg->setGeometry(QRect(160, 20, 111, 22));
        spinBox_minP_seg->setMinimum(-1000000);
        spinBox_minP_seg->setMaximum(1000000);
        spinBox_minP_seg->setValue(500);
        SpinBox_minRadius = new QDoubleSpinBox(Denoise_2);
        SpinBox_minRadius->setObjectName(QStringLiteral("SpinBox_minRadius"));
        SpinBox_minRadius->setGeometry(QRect(20, 50, 121, 22));
        SpinBox_minRadius->setMinimum(-1e+06);
        SpinBox_minRadius->setMaximum(1e+06);
        SpinBox_minRadius->setValue(4.5);
        SpinBox_maxRadius = new QDoubleSpinBox(Denoise_2);
        SpinBox_maxRadius->setObjectName(QStringLiteral("SpinBox_maxRadius"));
        SpinBox_maxRadius->setGeometry(QRect(160, 50, 111, 22));
        SpinBox_maxRadius->setMinimum(-1e+07);
        SpinBox_maxRadius->setMaximum(1e+06);
        SpinBox_maxRadius->setSingleStep(0.1);
        SpinBox_maxRadius->setValue(5.5);
        SpinBox_DistThreshSeg = new QDoubleSpinBox(Denoise_2);
        SpinBox_DistThreshSeg->setObjectName(QStringLiteral("SpinBox_DistThreshSeg"));
        SpinBox_DistThreshSeg->setGeometry(QRect(20, 80, 121, 22));
        SpinBox_DistThreshSeg->setMaximum(100000);
        SpinBox_DistThreshSeg->setValue(2);
        spinBox_Cylinder = new QSpinBox(Denoise_2);
        spinBox_Cylinder->setObjectName(QStringLiteral("spinBox_Cylinder"));
        spinBox_Cylinder->setGeometry(QRect(160, 80, 111, 22));
        spinBox_Cylinder->setMaximum(1000000);
        spinBox_Cylinder->setValue(500);
        Denoise_4 = new QGroupBox(tab_2);
        Denoise_4->setObjectName(QStringLiteral("Denoise_4"));
        Denoise_4->setGeometry(QRect(360, 120, 281, 141));
        Denoise_4->setAutoFillBackground(false);
        doubleBox_RegisX = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisX->setObjectName(QStringLiteral("doubleBox_RegisX"));
        doubleBox_RegisX->setGeometry(QRect(20, 20, 121, 22));
        doubleBox_RegisX->setMinimum(-1e+06);
        doubleBox_RegisX->setMaximum(1e+06);
        doubleBox_RegisX->setValue(-1);
        doubleBox_RegisY = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisY->setObjectName(QStringLiteral("doubleBox_RegisY"));
        doubleBox_RegisY->setGeometry(QRect(20, 50, 121, 22));
        doubleBox_RegisY->setMinimum(-1e+06);
        doubleBox_RegisY->setMaximum(1e+06);
        doubleBox_RegisY->setValue(1);
        comboBox_Regis = new QComboBox(Denoise_4);
        comboBox_Regis->setObjectName(QStringLiteral("comboBox_Regis"));
        comboBox_Regis->setGeometry(QRect(160, 110, 111, 22));
        doubleBox_RegisZ = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisZ->setObjectName(QStringLiteral("doubleBox_RegisZ"));
        doubleBox_RegisZ->setGeometry(QRect(20, 80, 121, 22));
        doubleBox_RegisZ->setMinimum(-1e+06);
        doubleBox_RegisZ->setMaximum(1e+06);
        doubleBox_RegisZ->setValue(1);
        doubleBox_RegisRZ = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisRZ->setObjectName(QStringLiteral("doubleBox_RegisRZ"));
        doubleBox_RegisRZ->setGeometry(QRect(160, 80, 111, 22));
        doubleBox_RegisRZ->setMinimum(-1e+06);
        doubleBox_RegisRZ->setMaximum(1e+06);
        doubleBox_RegisRZ->setValue(1);
        doubleBox_RegisRY = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisRY->setObjectName(QStringLiteral("doubleBox_RegisRY"));
        doubleBox_RegisRY->setGeometry(QRect(160, 50, 111, 22));
        doubleBox_RegisRY->setMinimum(-1e+06);
        doubleBox_RegisRY->setMaximum(1e+06);
        doubleBox_RegisRY->setValue(1);
        doubleBox_RegisRX = new QDoubleSpinBox(Denoise_4);
        doubleBox_RegisRX->setObjectName(QStringLiteral("doubleBox_RegisRX"));
        doubleBox_RegisRX->setGeometry(QRect(160, 20, 111, 22));
        doubleBox_RegisRX->setMinimum(-1e+06);
        doubleBox_RegisRX->setMaximum(1e+06);
        doubleBox_RegisRX->setValue(1);
        doubleBox_Regis_toler = new QDoubleSpinBox(Denoise_4);
        doubleBox_Regis_toler->setObjectName(QStringLiteral("doubleBox_Regis_toler"));
        doubleBox_Regis_toler->setGeometry(QRect(20, 110, 121, 22));
        doubleBox_Regis_toler->setMinimum(-1e+06);
        doubleBox_Regis_toler->setMaximum(1e+06);
        doubleBox_Regis_toler->setValue(10);
        groupBox_9 = new QGroupBox(tab_2);
        groupBox_9->setObjectName(QStringLiteral("groupBox_9"));
        groupBox_9->setGeometry(QRect(360, 260, 281, 181));
        Denoise = new QGroupBox(groupBox_9);
        Denoise->setObjectName(QStringLiteral("Denoise"));
        Denoise->setGeometry(QRect(10, 20, 261, 81));
        Denoise->setAutoFillBackground(false);
        doubleSpinBox_denoise = new QDoubleSpinBox(Denoise);
        doubleSpinBox_denoise->setObjectName(QStringLiteral("doubleSpinBox_denoise"));
        doubleSpinBox_denoise->setGeometry(QRect(20, 20, 111, 22));
        doubleSpinBox_denoise->setValue(1.5);
        SpinBox_Downsample = new QDoubleSpinBox(Denoise);
        SpinBox_Downsample->setObjectName(QStringLiteral("SpinBox_Downsample"));
        SpinBox_Downsample->setGeometry(QRect(150, 20, 111, 22));
        SpinBox_Downsample->setValue(1);
        doubleSpinBox_denoise_EcliSeg = new QDoubleSpinBox(Denoise);
        doubleSpinBox_denoise_EcliSeg->setObjectName(QStringLiteral("doubleSpinBox_denoise_EcliSeg"));
        doubleSpinBox_denoise_EcliSeg->setGeometry(QRect(20, 50, 111, 22));
        doubleSpinBox_denoise_EcliSeg->setValue(3);
        spinBox_minP_Denoise = new QSpinBox(Denoise);
        spinBox_minP_Denoise->setObjectName(QStringLiteral("spinBox_minP_Denoise"));
        spinBox_minP_Denoise->setGeometry(QRect(150, 50, 111, 22));
        spinBox_minP_Denoise->setMaximum(1000000);
        spinBox_minP_Denoise->setValue(100);
        Denoise_3 = new QGroupBox(groupBox_9);
        Denoise_3->setObjectName(QStringLiteral("Denoise_3"));
        Denoise_3->setGeometry(QRect(10, 100, 261, 71));
        Denoise_3->setAutoFillBackground(false);
        doubleBox_Upsampling_01 = new QDoubleSpinBox(Denoise_3);
        doubleBox_Upsampling_01->setObjectName(QStringLiteral("doubleBox_Upsampling_01"));
        doubleBox_Upsampling_01->setGeometry(QRect(90, 40, 81, 22));
        doubleBox_Upsampling_01->setMaximum(1e+06);
        doubleBox_Upsampling_01->setValue(0.5);
        doubleBox_Upsampling_02 = new QDoubleSpinBox(Denoise_3);
        doubleBox_Upsampling_02->setObjectName(QStringLiteral("doubleBox_Upsampling_02"));
        doubleBox_Upsampling_02->setGeometry(QRect(180, 40, 71, 22));
        doubleBox_Upsampling_02->setMaximum(1e+06);
        doubleBox_Upsampling_02->setValue(0.8);
        doubleBox_Upsampling_03 = new QDoubleSpinBox(Denoise_3);
        doubleBox_Upsampling_03->setObjectName(QStringLiteral("doubleBox_Upsampling_03"));
        doubleBox_Upsampling_03->setGeometry(QRect(10, 40, 71, 22));
        doubleBox_Upsampling_03->setMinimum(-1e+08);
        doubleBox_Upsampling_03->setMaximum(1e+06);
        doubleBox_Upsampling_03->setValue(2);
        label_OBBSizeTolerance_14 = new QLabel(Denoise_3);
        label_OBBSizeTolerance_14->setObjectName(QStringLiteral("label_OBBSizeTolerance_14"));
        label_OBBSizeTolerance_14->setGeometry(QRect(10, 20, 61, 21));
        groupBox_15 = new QGroupBox(tab_2);
        groupBox_15->setObjectName(QStringLiteral("groupBox_15"));
        groupBox_15->setGeometry(QRect(650, 380, 301, 221));
        groupBox_19 = new QGroupBox(groupBox_15);
        groupBox_19->setObjectName(QStringLiteral("groupBox_19"));
        groupBox_19->setGeometry(QRect(10, 20, 281, 71));
        SpinBox_ModDri_EucliSeg = new QDoubleSpinBox(groupBox_19);
        SpinBox_ModDri_EucliSeg->setObjectName(QStringLiteral("SpinBox_ModDri_EucliSeg"));
        SpinBox_ModDri_EucliSeg->setGeometry(QRect(100, 40, 81, 22));
        SpinBox_ModDri_EucliSeg->setMinimum(-1e+06);
        SpinBox_ModDri_EucliSeg->setMaximum(1e+07);
        SpinBox_ModDri_EucliSeg->setValue(5);
        spinBox_ModDri_minPSeg = new QSpinBox(groupBox_19);
        spinBox_ModDri_minPSeg->setObjectName(QStringLiteral("spinBox_ModDri_minPSeg"));
        spinBox_ModDri_minPSeg->setGeometry(QRect(190, 40, 81, 22));
        spinBox_ModDri_minPSeg->setMinimum(-1000000);
        spinBox_ModDri_minPSeg->setMaximum(1000000);
        spinBox_ModDri_minPSeg->setValue(200);
        SpinBox_ModDri_Denoise = new QDoubleSpinBox(groupBox_19);
        SpinBox_ModDri_Denoise->setObjectName(QStringLiteral("SpinBox_ModDri_Denoise"));
        SpinBox_ModDri_Denoise->setGeometry(QRect(10, 40, 81, 22));
        SpinBox_ModDri_Denoise->setMinimum(-1e+06);
        SpinBox_ModDri_Denoise->setMaximum(1e+07);
        SpinBox_ModDri_Denoise->setValue(1.5);
        label_OBBSizeTolerance_8 = new QLabel(groupBox_19);
        label_OBBSizeTolerance_8->setObjectName(QStringLiteral("label_OBBSizeTolerance_8"));
        label_OBBSizeTolerance_8->setGeometry(QRect(190, 20, 71, 21));
        label_OBBSizeTolerance_9 = new QLabel(groupBox_19);
        label_OBBSizeTolerance_9->setObjectName(QStringLiteral("label_OBBSizeTolerance_9"));
        label_OBBSizeTolerance_9->setGeometry(QRect(100, 20, 81, 21));
        label_OBBSizeTolerance_10 = new QLabel(groupBox_19);
        label_OBBSizeTolerance_10->setObjectName(QStringLiteral("label_OBBSizeTolerance_10"));
        label_OBBSizeTolerance_10->setGeometry(QRect(10, 20, 81, 21));
        groupBox_20 = new QGroupBox(groupBox_15);
        groupBox_20->setObjectName(QStringLiteral("groupBox_20"));
        groupBox_20->setGeometry(QRect(10, 100, 281, 111));
        comboBox_Scan_Obj = new QComboBox(groupBox_20);
        comboBox_Scan_Obj->setObjectName(QStringLiteral("comboBox_Scan_Obj"));
        comboBox_Scan_Obj->setGeometry(QRect(10, 80, 261, 22));
        checkBox_Scan_ICP = new QCheckBox(groupBox_20);
        checkBox_Scan_ICP->setObjectName(QStringLiteral("checkBox_Scan_ICP"));
        checkBox_Scan_ICP->setGeometry(QRect(200, 50, 51, 20));
        checkBox_Scan_ICP->setChecked(true);
        checkBox_Scan_Off = new QCheckBox(groupBox_20);
        checkBox_Scan_Off->setObjectName(QStringLiteral("checkBox_Scan_Off"));
        checkBox_Scan_Off->setGeometry(QRect(20, 50, 51, 20));
        checkBox_Scan_Off->setChecked(false);
        label_OBBSizeTolerance_11 = new QLabel(groupBox_20);
        label_OBBSizeTolerance_11->setObjectName(QStringLiteral("label_OBBSizeTolerance_11"));
        label_OBBSizeTolerance_11->setGeometry(QRect(10, 20, 71, 21));
        checkBox_Scan_ModeDriven = new QCheckBox(groupBox_20);
        checkBox_Scan_ModeDriven->setObjectName(QStringLiteral("checkBox_Scan_ModeDriven"));
        checkBox_Scan_ModeDriven->setGeometry(QRect(90, 50, 81, 20));
        checkBox_Scan_ModeDriven->setChecked(true);
        doubleBox_ModDri_Overlap = new QDoubleSpinBox(groupBox_20);
        doubleBox_ModDri_Overlap->setObjectName(QStringLiteral("doubleBox_ModDri_Overlap"));
        doubleBox_ModDri_Overlap->setGeometry(QRect(90, 20, 91, 22));
        doubleBox_ModDri_Overlap->setMinimum(-1e+06);
        doubleBox_ModDri_Overlap->setMaximum(1e+06);
        doubleBox_ModDri_Overlap->setValue(5);
        checkBox_ModDri_Save = new QCheckBox(groupBox_20);
        checkBox_ModDri_Save->setObjectName(QStringLiteral("checkBox_ModDri_Save"));
        checkBox_ModDri_Save->setGeometry(QRect(200, 20, 61, 20));
        checkBox_ModDri_Save->setChecked(false);
        groupBox_16 = new QGroupBox(tab_2);
        groupBox_16->setObjectName(QStringLiteral("groupBox_16"));
        groupBox_16->setGeometry(QRect(650, 9, 301, 371));
        comboBox_FrameSize_Obj = new QComboBox(groupBox_16);
        comboBox_FrameSize_Obj->setObjectName(QStringLiteral("comboBox_FrameSize_Obj"));
        comboBox_FrameSize_Obj->setGeometry(QRect(90, 340, 91, 21));
        groupBox_17 = new QGroupBox(groupBox_16);
        groupBox_17->setObjectName(QStringLiteral("groupBox_17"));
        groupBox_17->setGeometry(QRect(10, 120, 281, 121));
        label_OBBSizeTolerance_2 = new QLabel(groupBox_17);
        label_OBBSizeTolerance_2->setObjectName(QStringLiteral("label_OBBSizeTolerance_2"));
        label_OBBSizeTolerance_2->setGeometry(QRect(10, 20, 61, 21));
        spinBox_minP_Spheres = new QSpinBox(groupBox_17);
        spinBox_minP_Spheres->setObjectName(QStringLiteral("spinBox_minP_Spheres"));
        spinBox_minP_Spheres->setGeometry(QRect(10, 40, 81, 22));
        spinBox_minP_Spheres->setMinimum(-1000000);
        spinBox_minP_Spheres->setMaximum(1000000);
        spinBox_minP_Spheres->setValue(100);
        spinBox_maxP_Spheres = new QSpinBox(groupBox_17);
        spinBox_maxP_Spheres->setObjectName(QStringLiteral("spinBox_maxP_Spheres"));
        spinBox_maxP_Spheres->setGeometry(QRect(100, 40, 71, 22));
        spinBox_maxP_Spheres->setMinimum(-1000000);
        spinBox_maxP_Spheres->setMaximum(1000000);
        spinBox_maxP_Spheres->setValue(2000);
        SpinBox_Frame_DistThresh = new QDoubleSpinBox(groupBox_17);
        SpinBox_Frame_DistThresh->setObjectName(QStringLiteral("SpinBox_Frame_DistThresh"));
        SpinBox_Frame_DistThresh->setGeometry(QRect(10, 90, 81, 22));
        SpinBox_Frame_DistThresh->setMinimum(-100000);
        SpinBox_Frame_DistThresh->setMaximum(100000);
        SpinBox_Frame_DistThresh->setValue(1);
        label_Frame_DistThresh = new QLabel(groupBox_17);
        label_Frame_DistThresh->setObjectName(QStringLiteral("label_Frame_DistThresh"));
        label_Frame_DistThresh->setGeometry(QRect(10, 70, 81, 21));
        SpinBox_Frame_RadiusMin = new QDoubleSpinBox(groupBox_17);
        SpinBox_Frame_RadiusMin->setObjectName(QStringLiteral("SpinBox_Frame_RadiusMin"));
        SpinBox_Frame_RadiusMin->setGeometry(QRect(100, 90, 71, 22));
        SpinBox_Frame_RadiusMin->setMinimum(-1e+06);
        SpinBox_Frame_RadiusMin->setMaximum(100000);
        SpinBox_Frame_RadiusMin->setValue(7);
        label_Frame_RadiusMin = new QLabel(groupBox_17);
        label_Frame_RadiusMin->setObjectName(QStringLiteral("label_Frame_RadiusMin"));
        label_Frame_RadiusMin->setGeometry(QRect(100, 70, 61, 21));
        SpinBox_Frame_RadiusMax = new QDoubleSpinBox(groupBox_17);
        SpinBox_Frame_RadiusMax->setObjectName(QStringLiteral("SpinBox_Frame_RadiusMax"));
        SpinBox_Frame_RadiusMax->setGeometry(QRect(180, 90, 91, 22));
        SpinBox_Frame_RadiusMax->setMinimum(-10000);
        SpinBox_Frame_RadiusMax->setMaximum(100000);
        SpinBox_Frame_RadiusMax->setSingleStep(0.1);
        SpinBox_Frame_RadiusMax->setValue(8);
        label_Frame_RadiusMax = new QLabel(groupBox_17);
        label_Frame_RadiusMax->setObjectName(QStringLiteral("label_Frame_RadiusMax"));
        label_Frame_RadiusMax->setGeometry(QRect(180, 70, 61, 21));
        label_OBBSizeTolerance_3 = new QLabel(groupBox_17);
        label_OBBSizeTolerance_3->setObjectName(QStringLiteral("label_OBBSizeTolerance_3"));
        label_OBBSizeTolerance_3->setGeometry(QRect(100, 20, 61, 21));
        spinBox_minPDetected_Spheres = new QSpinBox(groupBox_17);
        spinBox_minPDetected_Spheres->setObjectName(QStringLiteral("spinBox_minPDetected_Spheres"));
        spinBox_minPDetected_Spheres->setGeometry(QRect(180, 40, 91, 22));
        spinBox_minPDetected_Spheres->setMinimum(-1000000);
        spinBox_minPDetected_Spheres->setMaximum(1000000);
        spinBox_minPDetected_Spheres->setValue(50);
        label_OBBSizeTolerance_4 = new QLabel(groupBox_17);
        label_OBBSizeTolerance_4->setObjectName(QStringLiteral("label_OBBSizeTolerance_4"));
        label_OBBSizeTolerance_4->setGeometry(QRect(180, 20, 91, 21));
        Matching = new QGroupBox(groupBox_16);
        Matching->setObjectName(QStringLiteral("Matching"));
        Matching->setGeometry(QRect(10, 250, 281, 81));
        label_Frame_DistThresh_2 = new QLabel(Matching);
        label_Frame_DistThresh_2->setObjectName(QStringLiteral("label_Frame_DistThresh_2"));
        label_Frame_DistThresh_2->setGeometry(QRect(10, 20, 81, 21));
        SpinBox_Frame_MatchingThresh = new QDoubleSpinBox(Matching);
        SpinBox_Frame_MatchingThresh->setObjectName(QStringLiteral("SpinBox_Frame_MatchingThresh"));
        SpinBox_Frame_MatchingThresh->setGeometry(QRect(10, 40, 81, 22));
        SpinBox_Frame_MatchingThresh->setMinimum(-1e+07);
        SpinBox_Frame_MatchingThresh->setMaximum(1e+06);
        SpinBox_Frame_MatchingThresh->setSingleStep(0.1);
        SpinBox_Frame_MatchingThresh->setValue(2);
        checkBox_FrameScan_ModeDriven = new QCheckBox(Matching);
        checkBox_FrameScan_ModeDriven->setObjectName(QStringLiteral("checkBox_FrameScan_ModeDriven"));
        checkBox_FrameScan_ModeDriven->setGeometry(QRect(190, 10, 81, 20));
        checkBox_FrameScan_ModeDriven->setChecked(false);
        checkBox_FrameScan_Save = new QCheckBox(Matching);
        checkBox_FrameScan_Save->setObjectName(QStringLiteral("checkBox_FrameScan_Save"));
        checkBox_FrameScan_Save->setGeometry(QRect(190, 50, 61, 20));
        checkBox_FrameScan_Save->setChecked(false);
        label_OBBSizeTolerance_12 = new QLabel(Matching);
        label_OBBSizeTolerance_12->setObjectName(QStringLiteral("label_OBBSizeTolerance_12"));
        label_OBBSizeTolerance_12->setGeometry(QRect(100, 20, 71, 21));
        doubleBox_Frame_Overlap = new QDoubleSpinBox(Matching);
        doubleBox_Frame_Overlap->setObjectName(QStringLiteral("doubleBox_Frame_Overlap"));
        doubleBox_Frame_Overlap->setGeometry(QRect(100, 40, 81, 22));
        doubleBox_Frame_Overlap->setMinimum(-1e+06);
        doubleBox_Frame_Overlap->setMaximum(1e+06);
        doubleBox_Frame_Overlap->setValue(5);
        checkBox_FrameScan_ICP = new QCheckBox(Matching);
        checkBox_FrameScan_ICP->setObjectName(QStringLiteral("checkBox_FrameScan_ICP"));
        checkBox_FrameScan_ICP->setGeometry(QRect(190, 30, 51, 20));
        checkBox_FrameScan_ICP->setChecked(true);
        groupBox_18 = new QGroupBox(groupBox_16);
        groupBox_18->setObjectName(QStringLiteral("groupBox_18"));
        groupBox_18->setGeometry(QRect(10, 20, 281, 101));
        SpinBox_FrameEucli_Seg = new QDoubleSpinBox(groupBox_18);
        SpinBox_FrameEucli_Seg->setObjectName(QStringLiteral("SpinBox_FrameEucli_Seg"));
        SpinBox_FrameEucli_Seg->setGeometry(QRect(100, 40, 81, 22));
        SpinBox_FrameEucli_Seg->setMinimum(-1e+06);
        SpinBox_FrameEucli_Seg->setMaximum(1e+07);
        SpinBox_FrameEucli_Seg->setValue(5);
        spinBox_FrameminP_seg = new QSpinBox(groupBox_18);
        spinBox_FrameminP_seg->setObjectName(QStringLiteral("spinBox_FrameminP_seg"));
        spinBox_FrameminP_seg->setGeometry(QRect(190, 40, 81, 22));
        spinBox_FrameminP_seg->setMinimum(-1000000);
        spinBox_FrameminP_seg->setMaximum(1000000);
        spinBox_FrameminP_seg->setValue(100);
        SpinBox_Frame_Denoise = new QDoubleSpinBox(groupBox_18);
        SpinBox_Frame_Denoise->setObjectName(QStringLiteral("SpinBox_Frame_Denoise"));
        SpinBox_Frame_Denoise->setGeometry(QRect(10, 40, 81, 22));
        SpinBox_Frame_Denoise->setMinimum(-1e+06);
        SpinBox_Frame_Denoise->setMaximum(1e+07);
        SpinBox_Frame_Denoise->setValue(1.5);
        label_OBBSizeTolerance_5 = new QLabel(groupBox_18);
        label_OBBSizeTolerance_5->setObjectName(QStringLiteral("label_OBBSizeTolerance_5"));
        label_OBBSizeTolerance_5->setGeometry(QRect(190, 20, 71, 21));
        label_OBBSizeTolerance_6 = new QLabel(groupBox_18);
        label_OBBSizeTolerance_6->setObjectName(QStringLiteral("label_OBBSizeTolerance_6"));
        label_OBBSizeTolerance_6->setGeometry(QRect(100, 20, 81, 21));
        label_OBBSizeTolerance_7 = new QLabel(groupBox_18);
        label_OBBSizeTolerance_7->setObjectName(QStringLiteral("label_OBBSizeTolerance_7"));
        label_OBBSizeTolerance_7->setGeometry(QRect(10, 20, 81, 21));
        SpinBox_FrameDenoise_Seg = new QDoubleSpinBox(groupBox_18);
        SpinBox_FrameDenoise_Seg->setObjectName(QStringLiteral("SpinBox_FrameDenoise_Seg"));
        SpinBox_FrameDenoise_Seg->setGeometry(QRect(100, 70, 81, 22));
        SpinBox_FrameDenoise_Seg->setMinimum(-1e+06);
        SpinBox_FrameDenoise_Seg->setMaximum(1e+07);
        SpinBox_FrameDenoise_Seg->setValue(5);
        spinBox_FrameDenoise_minPSeg = new QSpinBox(groupBox_18);
        spinBox_FrameDenoise_minPSeg->setObjectName(QStringLiteral("spinBox_FrameDenoise_minPSeg"));
        spinBox_FrameDenoise_minPSeg->setGeometry(QRect(190, 70, 81, 22));
        spinBox_FrameDenoise_minPSeg->setMinimum(-1000000);
        spinBox_FrameDenoise_minPSeg->setMaximum(1000000);
        spinBox_FrameDenoise_minPSeg->setValue(2000);
        label_OBBSizeTolerance_13 = new QLabel(groupBox_18);
        label_OBBSizeTolerance_13->setObjectName(QStringLiteral("label_OBBSizeTolerance_13"));
        label_OBBSizeTolerance_13->setGeometry(QRect(30, 70, 61, 21));
        label_Frame_DistThresh_3 = new QLabel(groupBox_16);
        label_Frame_DistThresh_3->setObjectName(QStringLiteral("label_Frame_DistThresh_3"));
        label_Frame_DistThresh_3->setGeometry(QRect(20, 340, 61, 21));
        checkBox_Frame_CaliFix = new QCheckBox(groupBox_16);
        checkBox_Frame_CaliFix->setObjectName(QStringLiteral("checkBox_Frame_CaliFix"));
        checkBox_Frame_CaliFix->setGeometry(QRect(200, 340, 91, 20));
        checkBox_Frame_CaliFix->setChecked(false);
        Parameters->addTab(tab_2, QString());
        3D_InspectionClass->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(3D_InspectionClass);
        menuBar->setObjectName(QStringLiteral("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 1261, 21));
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName(QStringLiteral("menuFile"));
        menuPre_Processing = new QMenu(menuBar);
        menuPre_Processing->setObjectName(QStringLiteral("menuPre_Processing"));
        menuRecognition = new QMenu(menuBar);
        menuRecognition->setObjectName(QStringLiteral("menuRecognition"));
        menuHelp = new QMenu(menuBar);
        menuHelp->setObjectName(QStringLiteral("menuHelp"));
        menuSegmentation = new QMenu(menuBar);
        menuSegmentation->setObjectName(QStringLiteral("menuSegmentation"));
        menuAuto_Mode = new QMenu(menuBar);
        menuAuto_Mode->setObjectName(QStringLiteral("menuAuto_Mode"));
        menuTest_Mode = new QMenu(menuBar);
        menuTest_Mode->setObjectName(QStringLiteral("menuTest_Mode"));
        menuFrame_Calibration_2 = new QMenu(menuTest_Mode);
        menuFrame_Calibration_2->setObjectName(QStringLiteral("menuFrame_Calibration_2"));
        menuFrame_Scan = new QMenu(menuTest_Mode);
        menuFrame_Scan->setObjectName(QStringLiteral("menuFrame_Scan"));
        menuTool = new QMenu(menuBar);
        menuTool->setObjectName(QStringLiteral("menuTool"));
        menuExamples = new QMenu(menuTool);
        menuExamples->setObjectName(QStringLiteral("menuExamples"));
        menuVirtual_Camera = new QMenu(menuTool);
        menuVirtual_Camera->setObjectName(QStringLiteral("menuVirtual_Camera"));
        action_Rotational_Table = new QMenu(menuTool);
        action_Rotational_Table->setObjectName(QStringLiteral("action_Rotational_Table"));
        menuRegistration = new QMenu(menuBar);
        menuRegistration->setObjectName(QStringLiteral("menuRegistration"));
        menuLoad_Point_Clouds = new QMenu(menuRegistration);
        menuLoad_Point_Clouds->setObjectName(QStringLiteral("menuLoad_Point_Clouds"));
        menuCoarse_Registration = new QMenu(menuRegistration);
        menuCoarse_Registration->setObjectName(QStringLiteral("menuCoarse_Registration"));
        menuRefine_Registration = new QMenu(menuRegistration);
        menuRefine_Registration->setObjectName(QStringLiteral("menuRefine_Registration"));
        3D_InspectionClass->setMenuBar(menuBar);
        mainToolBar = new QToolBar(3D_InspectionClass);
        mainToolBar->setObjectName(QStringLiteral("mainToolBar"));
        3D_InspectionClass->addToolBar(Qt::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(3D_InspectionClass);
        statusBar->setObjectName(QStringLiteral("statusBar"));
        3D_InspectionClass->setStatusBar(statusBar);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuPre_Processing->menuAction());
        menuBar->addAction(menuSegmentation->menuAction());
        menuBar->addAction(menuRecognition->menuAction());
        menuBar->addAction(menuRegistration->menuAction());
        menuBar->addAction(menuTest_Mode->menuAction());
        menuBar->addAction(menuAuto_Mode->menuAction());
        menuBar->addAction(menuTool->menuAction());
        menuBar->addAction(menuHelp->menuAction());
        menuFile->addAction(actionOpen);
        menuFile->addAction(actionDownload);
        menuFile->addAction(actionSave);
        menuFile->addAction(actionReload_Cloud);
        menuFile->addAction(actionReset_3D_View);
        menuFile->addAction(actionReset_Project);
        menuFile->addAction(actionClose);
        menuPre_Processing->addAction(actionDownsample);
        menuPre_Processing->addAction(actionDenoise);
        menuPre_Processing->addAction(actionDenoise_by_segment);
        menuPre_Processing->addAction(actionDenoise_by_normals);
        menuPre_Processing->addAction(actionUpsampling);
        menuRecognition->addAction(actionOBB_Recognition);
        menuRecognition->addAction(actionSubOBB_Recognition);
        menuRecognition->addAction(actionRG_SubOBB);
        menuRecognition->addAction(actionRecognition_Error_Report);
        menuHelp->addAction(actionAbout_us);
        menuSegmentation->addAction(actionEuclidean_Extraction);
        menuSegmentation->addAction(actionCylinder_Fitting);
        menuAuto_Mode->addAction(actionAutoScanning);
        menuAuto_Mode->addAction(actionFrame_Based_Scan);
        menuAuto_Mode->addAction(actionPick_and_Place);
        menuAuto_Mode->addAction(action_AutoMode_Pause);
        menuAuto_Mode->addAction(action_AutoMode_Continue);
        menuTest_Mode->addAction(actionTestScanning);
        menuTest_Mode->addAction(actionPick_and_Place_Test);
        menuTest_Mode->addAction(menuFrame_Calibration_2->menuAction());
        menuTest_Mode->addAction(menuFrame_Scan->menuAction());
        menuFrame_Calibration_2->addAction(action_FrameBall_Detection);
        menuFrame_Calibration_2->addAction(actionFrame_Matching);
        menuFrame_Scan->addAction(action_FrameScan_Start);
        menuFrame_Scan->addAction(action_ScanFrame_Pause);
        menuFrame_Scan->addAction(action_FrameScan_Continue);
        menuFrame_Scan->addAction(action_FrameCaliSaveTransf);
        menuTool->addAction(actionShow_OBB);
        menuTool->addAction(menuExamples->menuAction());
        menuTool->addAction(menuVirtual_Camera->menuAction());
        menuTool->addAction(action_Rotational_Table->menuAction());
        menuTool->addAction(actionNormals);
        menuExamples->addAction(actionICP_Example);
        menuExamples->addAction(actionSVD_Example);
        menuExamples->addAction(actionToolTest);
        menuExamples->addAction(actionSphere_Detection);
        menuVirtual_Camera->addAction(actionInitial_Transformation_VirtualCam);
        menuVirtual_Camera->addAction(actionGenerate_Database_VirtualCam);
        menuVirtual_Camera->addAction(actionGenerate_Opt_Database);
        menuVirtual_Camera->addAction(actionGennerate_NonSeg_Database);
        action_Rotational_Table->addAction(action_rotaTable_Connect);
        action_Rotational_Table->addAction(action_rotaTable_Disconnect);
        action_Rotational_Table->addAction(action_rotaTable_Move_60_Degree);
        action_Rotational_Table->addAction(action_rotaTab_ZeroPos);
        menuRegistration->addAction(menuLoad_Point_Clouds->menuAction());
        menuRegistration->addAction(menuCoarse_Registration->menuAction());
        menuRegistration->addAction(menuRefine_Registration->menuAction());
        menuRegistration->addAction(actionOverlap_Removal);
        menuRegistration->addAction(actionRegistration_Error_Report);
        menuLoad_Point_Clouds->addAction(actionTarge_Cloud);
        menuLoad_Point_Clouds->addAction(actionSource_Cloud);
        menuCoarse_Registration->addAction(actionOBB_Matching);
        menuCoarse_Registration->addAction(action_Regis_System_Positioning);
        menuCoarse_Registration->addAction(actionFrame_Based_Registration);
        menuCoarse_Registration->addAction(action_Regis_Model_Driven);
        menuRefine_Registration->addAction(actionICP);

        retranslateUi(3D_InspectionClass);

        Parameters->setCurrentIndex(0);
        comboBox_Kuka->setCurrentIndex(-1);
        comboBox_Probe->setCurrentIndex(-1);


        QMetaObject::connectSlotsByName(3D_InspectionClass);
    } // setupUi

    void retranslateUi(QMainWindow *3D_InspectionClass)
    {
        3D_InspectionClass->setWindowTitle(QApplication::translate("3D_InspectionClass", "3D_Inspection", 0));
        actionOpen->setText(QApplication::translate("3D_InspectionClass", "Open...", 0));
        actionSave->setText(QApplication::translate("3D_InspectionClass", "Save", 0));
        actionClose->setText(QApplication::translate("3D_InspectionClass", "Close", 0));
        actionDenoise->setText(QApplication::translate("3D_InspectionClass", "Denoise", 0));
        actionDownsample->setText(QApplication::translate("3D_InspectionClass", "Downsample", 0));
        actionReset_3D_View->setText(QApplication::translate("3D_InspectionClass", "Reset 3D View", 0));
        actionReload_Cloud->setText(QApplication::translate("3D_InspectionClass", "Reload Cloud", 0));
        actionEuclidean_Extraction->setText(QApplication::translate("3D_InspectionClass", "Euclidean Extraction", 0));
        actionCylinder_Fitting->setText(QApplication::translate("3D_InspectionClass", "Cylinder Fitting", 0));
        actionSubOBB_Recognition->setText(QApplication::translate("3D_InspectionClass", "Sub-OBB", 0));
        actionAutoScanning->setText(QApplication::translate("3D_InspectionClass", "Model Driven Scan", 0));
        actionPick_and_Place->setText(QApplication::translate("3D_InspectionClass", "Pick and Place", 0));
        actionDownload->setText(QApplication::translate("3D_InspectionClass", "Download", 0));
        actionAbout_us->setText(QApplication::translate("3D_InspectionClass", "About NTU-PM Lab", 0));
        actionTestScanning->setText(QApplication::translate("3D_InspectionClass", "Scanning", 0));
        actionPick_and_Place_Test->setText(QApplication::translate("3D_InspectionClass", "Pick and Place", 0));
        actionDenoise_by_segment->setText(QApplication::translate("3D_InspectionClass", "Denoise by segment", 0));
        actionL_Shape_Detection->setText(QApplication::translate("3D_InspectionClass", "L-Shape Detection", 0));
        actionShow_OBB->setText(QApplication::translate("3D_InspectionClass", "Show OBB", 0));
        actionRecognition_Error_Report->setText(QApplication::translate("3D_InspectionClass", "Error Report", 0));
        actionICP_Example->setText(QApplication::translate("3D_InspectionClass", "ICP Registration", 0));
        actionSVD_Example->setText(QApplication::translate("3D_InspectionClass", "SVD Registration", 0));
        actionOBB_Recognition->setText(QApplication::translate("3D_InspectionClass", "Original OBB", 0));
        actionTarge_Cloud->setText(QApplication::translate("3D_InspectionClass", "Target Cloud", 0));
        actionSource_Cloud->setText(QApplication::translate("3D_InspectionClass", "Source Cloud", 0));
        actionOBB_Matching->setText(QApplication::translate("3D_InspectionClass", "OBB Matching", 0));
        actionICP->setText(QApplication::translate("3D_InspectionClass", "ICP", 0));
        actionRegistration_Error_Report->setText(QApplication::translate("3D_InspectionClass", "Error Report", 0));
        actionLoad_CAD_Model->setText(QApplication::translate("3D_InspectionClass", "Load CAD Model", 0));
        actionInitial_Transformation_VirtualCam->setText(QApplication::translate("3D_InspectionClass", "Initial Transformation", 0));
        actionGenerate_Database_VirtualCam->setText(QApplication::translate("3D_InspectionClass", "Generate Database", 0));
        actionCapture->setText(QApplication::translate("3D_InspectionClass", "Capture", 0));
        actionRG_SubOBB->setText(QApplication::translate("3D_InspectionClass", "RG-SubOBB", 0));
        actionToolTest->setText(QApplication::translate("3D_InspectionClass", "Test", 0));
        actionSphere_Detection->setText(QApplication::translate("3D_InspectionClass", "Sphere Detection", 0));
        action_Regis_System_Positioning->setText(QApplication::translate("3D_InspectionClass", "System Positioning", 0));
        actionUpsampling->setText(QApplication::translate("3D_InspectionClass", "Upsampling", 0));
        action_AutoMode_Pause->setText(QApplication::translate("3D_InspectionClass", "Pause", 0));
        action_AutoMode_Continue->setText(QApplication::translate("3D_InspectionClass", "Continue", 0));
        action_rotaTable_Connect->setText(QApplication::translate("3D_InspectionClass", "Connect", 0));
        action_rotaTable_Disconnect->setText(QApplication::translate("3D_InspectionClass", "Disconnect", 0));
        action_rotaTable_Move_60_Degree->setText(QApplication::translate("3D_InspectionClass", "Move 60 Degree", 0));
        action_rotaTab_ZeroPos->setText(QApplication::translate("3D_InspectionClass", "Zero Position", 0));
        actionNormals->setText(QApplication::translate("3D_InspectionClass", "Normals", 0));
        action_Regis_Model_Driven->setText(QApplication::translate("3D_InspectionClass", "Model Driven", 0));
        actionReset_Project->setText(QApplication::translate("3D_InspectionClass", "Reset Project", 0));
        actionGenerate_Opt_Database->setText(QApplication::translate("3D_InspectionClass", "Generate Opt-Database", 0));
        actionGennerate_NonSeg_Database->setText(QApplication::translate("3D_InspectionClass", "Gennerate NonSeg-Database", 0));
        actionOverlap_Removal->setText(QApplication::translate("3D_InspectionClass", "Overlap Removal", 0));
        action_FrameSphere_Detection->setText(QApplication::translate("3D_InspectionClass", "Sphere Detection", 0));
        actionMatching->setText(QApplication::translate("3D_InspectionClass", "Matching", 0));
        action_FrameBall_Detection->setText(QApplication::translate("3D_InspectionClass", "Sphere Detection", 0));
        actionFrame_Matching->setText(QApplication::translate("3D_InspectionClass", "Matching", 0));
        actionFrame_Based_Scan->setText(QApplication::translate("3D_InspectionClass", "Frame Based Scan", 0));
        actionFrame_Based_Registration->setText(QApplication::translate("3D_InspectionClass", "Frame Based", 0));
        action_FrameScan_Start->setText(QApplication::translate("3D_InspectionClass", "Start", 0));
        action_ScanFrame_Pause->setText(QApplication::translate("3D_InspectionClass", "Pause", 0));
        action_FrameScan_Continue->setText(QApplication::translate("3D_InspectionClass", "Continue", 0));
        action_FrameCaliSaveTransf->setText(QApplication::translate("3D_InspectionClass", "Save Transformation", 0));
        actionDenoise_by_normals->setText(QApplication::translate("3D_InspectionClass", "Denoise by normals", 0));
        groupBox_4->setTitle(QApplication::translate("3D_InspectionClass", "Plot", 0));
        groupBox_5->setTitle(QApplication::translate("3D_InspectionClass", "Comments", 0));
        Parameters->setTabText(Parameters->indexOf(tab), QApplication::translate("3D_InspectionClass", "3D_Result_Display", 0));
        groupBox_7->setTitle(QApplication::translate("3D_InspectionClass", "Robot", 0));
        textEdit_Send_Kuka->setHtml(QApplication::translate("3D_InspectionClass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&lt;Sensor&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Message&gt;Example message&lt;/Message&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Positions&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;Current X=&quot;486.60&quot; Y=&quot;-65.67&quot; Z=&quot;543.48&quot; A=&quot;18"
                        "0.00&quot; B=&quot;1.66&quot; C=&quot;-179.94&quot; S=&quot;2&quot; T=&quot;10&quot; M=&quot;1&quot; /&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;Before&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      &lt;X&gt;0.9842&lt;/X&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;/Before&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;/Positions&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Nmb&gt;8&lt;/Nmb&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Status&gt;</p>\n"
""
                        "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;IsActive&gt;1&lt;/IsActive&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;/Status&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Read&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;xyzabc X=&quot;500&quot; Y=&quot;100&quot; Z=&quot;600&quot; A=&quot;90&quot; B=&quot;0&quot; C=&quot;180&quot; /&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    &lt;xyzabc1 X=&quot;400&quot; Y=&quot;100&quot; Z=&quot;600&quot; A=&quot;90&quot; B=&quot;0&quot; C=&quot;180&quot; /&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-l"
                        "eft:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;/Read&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Show error=&quot;0&quot; temp=&quot;9929&quot;&gt;Taginfo in attributes&lt;/Show&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  &lt;Free&gt;2912&lt;/Free&gt;</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&lt;/Sensor&gt;</p></body></html>", 0));
        textEdit_Recieved_Kuka->setHtml(QApplication::translate("3D_InspectionClass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Please press Listen button to start!</p></body></html>", 0));
        bt_Listen_Kuka->setText(QApplication::translate("3D_InspectionClass", "Listen Kuka", 0));
        bt_Origin_Kuka->setText(QApplication::translate("3D_InspectionClass", "Origin", 0));
        Manual->setTitle(QApplication::translate("3D_InspectionClass", "Manual Mode", 0));
        bt_Read_Kuka->setText(QApplication::translate("3D_InspectionClass", "Read", 0));
        bt_Send_Kuka->setText(QApplication::translate("3D_InspectionClass", "Send", 0));
        bt_Move_Kuka->setText(QApplication::translate("3D_InspectionClass", "Move", 0));
        groupBox_8->setTitle(QApplication::translate("3D_InspectionClass", "Probe", 0));
        Manual_2->setTitle(QApplication::translate("3D_InspectionClass", "Manual Mode", 0));
        bt_Read_Probe->setText(QApplication::translate("3D_InspectionClass", "Read", 0));
        bt_Send_Probe->setText(QApplication::translate("3D_InspectionClass", "Send", 0));
        textEdit_Recieved_Probe->setHtml(QApplication::translate("3D_InspectionClass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Data Receive</p></body></html>", 0));
        textEdit_Send_Probe->setHtml(QApplication::translate("3D_InspectionClass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Data Send</p></body></html>", 0));
        bt_Listen_Probe->setText(QApplication::translate("3D_InspectionClass", "Listen Probe", 0));
        Parameters->setTabText(Parameters->indexOf(TCP_IP), QApplication::translate("3D_InspectionClass", "TCP_IP_Connection", 0));
        groupBox->setTitle(QApplication::translate("3D_InspectionClass", "Recognition", 0));
        Original_OBB->setTitle(QApplication::translate("3D_InspectionClass", "Original OBB", 0));
        label_OBBSizeTolerance->setText(QApplication::translate("3D_InspectionClass", "OBB Size Tolerance:", 0));
        groupBox_6->setTitle(QApplication::translate("3D_InspectionClass", "VirtualCam", 0));
        label_12->setText(QApplication::translate("3D_InspectionClass", "Rz", 0));
        label_11->setText(QApplication::translate("3D_InspectionClass", "Ry", 0));
        label_10->setText(QApplication::translate("3D_InspectionClass", "Rx", 0));
        Kx->setText(QApplication::translate("3D_InspectionClass", "Kx", 0));
        label_13->setText(QApplication::translate("3D_InspectionClass", "ZThresh", 0));
        label_14->setText(QApplication::translate("3D_InspectionClass", "Extracted X", 0));
        label_15->setText(QApplication::translate("3D_InspectionClass", "Name Model", 0));
        label_16->setText(QApplication::translate("3D_InspectionClass", "Noise", 0));
        groupBox_11->setTitle(QApplication::translate("3D_InspectionClass", "Features", 0));
        checkBox_VirCam_Area->setText(QApplication::translate("3D_InspectionClass", "Area", 0));
        checkBox_VirCam_Dis->setText(QApplication::translate("3D_InspectionClass", "Distance", 0));
        checkBox_VirCam_Normal->setText(QApplication::translate("3D_InspectionClass", "Normals", 0));
        groupBox_12->setTitle(QString());
        label_4->setText(QApplication::translate("3D_InspectionClass", "Dst Thresh:", 0));
        Original_OBB_2->setTitle(QApplication::translate("3D_InspectionClass", "SubOBB", 0));
        groupBox_13->setTitle(QString());
        checkBox_nonSeg_Recognition->setText(QApplication::translate("3D_InspectionClass", "nonSegment", 0));
        checkBox_DetecAll->setText(QApplication::translate("3D_InspectionClass", "All Objects", 0));
        checkBox_OSubOBB_Recognition->setText(QApplication::translate("3D_InspectionClass", "Optimized", 0));
        checkBox_SubOBB_Recognition->setText(QApplication::translate("3D_InspectionClass", "Original", 0));
        groupBox_10->setTitle(QApplication::translate("3D_InspectionClass", "Features", 0));
        checkBox_RecogFea_Area->setText(QApplication::translate("3D_InspectionClass", "Area", 0));
        checkBox_RecogFea_Dis->setText(QApplication::translate("3D_InspectionClass", "Distance", 0));
        checkBox_RecogFea_Normal->setText(QApplication::translate("3D_InspectionClass", "Normals", 0));
        groupBox_14->setTitle(QString());
        label_SubOBBSizeTolerance->setText(QApplication::translate("3D_InspectionClass", "SubOBB Size Tolerance:", 0));
        label_SubOBBSizeTolerance_2->setText(QApplication::translate("3D_InspectionClass", "NCC Thresh:", 0));
        label_SubOBBSizeTolerance_3->setText(QApplication::translate("3D_InspectionClass", "Up", 0));
        label_SubOBBSizeTolerance_4->setText(QApplication::translate("3D_InspectionClass", "Down", 0));
        Denoise_5->setTitle(QApplication::translate("3D_InspectionClass", "Normals and Quality Criterion", 0));
        label_OBBSizeTolerance_15->setText(QApplication::translate("3D_InspectionClass", "Level", 0));
        label_OBBSizeTolerance_16->setText(QApplication::translate("3D_InspectionClass", "Scale", 0));
        label_OBBSizeTolerance_17->setText(QApplication::translate("3D_InspectionClass", "Thresh", 0));
        groupBox_2->setTitle(QApplication::translate("3D_InspectionClass", "Pick and Place", 0));
        groupBox_3->setTitle(QApplication::translate("3D_InspectionClass", "Calibration Robot", 0));
        label->setText(QApplication::translate("3D_InspectionClass", "X", 0));
        label_2->setText(QApplication::translate("3D_InspectionClass", "Y", 0));
        label_3->setText(QApplication::translate("3D_InspectionClass", "Z", 0));
        label_9->setText(QApplication::translate("3D_InspectionClass", "Ry", 0));
        label_7->setText(QApplication::translate("3D_InspectionClass", "Rx", 0));
        label_8->setText(QApplication::translate("3D_InspectionClass", "Rz", 0));
        checkBox_Host->setText(QApplication::translate("3D_InspectionClass", "Host", 0));
        Denoise_2->setTitle(QApplication::translate("3D_InspectionClass", "Segmentation", 0));
        Denoise_4->setTitle(QApplication::translate("3D_InspectionClass", "Registration", 0));
        groupBox_9->setTitle(QApplication::translate("3D_InspectionClass", "Pre-Processing", 0));
        Denoise->setTitle(QApplication::translate("3D_InspectionClass", "Denoise and Downsample", 0));
        Denoise_3->setTitle(QApplication::translate("3D_InspectionClass", "Upsampling", 0));
        label_OBBSizeTolerance_14->setText(QApplication::translate("3D_InspectionClass", "Radius", 0));
        groupBox_15->setTitle(QApplication::translate("3D_InspectionClass", "Model Driven Scanning", 0));
        groupBox_19->setTitle(QApplication::translate("3D_InspectionClass", "Pre-Processing", 0));
        label_OBBSizeTolerance_8->setText(QApplication::translate("3D_InspectionClass", "Min Points Seg", 0));
        label_OBBSizeTolerance_9->setText(QApplication::translate("3D_InspectionClass", "Euclidean Seg", 0));
        label_OBBSizeTolerance_10->setText(QApplication::translate("3D_InspectionClass", "Denoise", 0));
        groupBox_20->setTitle(QApplication::translate("3D_InspectionClass", "Matching", 0));
        checkBox_Scan_ICP->setText(QApplication::translate("3D_InspectionClass", "ICP", 0));
        checkBox_Scan_Off->setText(QApplication::translate("3D_InspectionClass", "Off", 0));
        label_OBBSizeTolerance_11->setText(QApplication::translate("3D_InspectionClass", "Overlap Toler:", 0));
        checkBox_Scan_ModeDriven->setText(QApplication::translate("3D_InspectionClass", "Model Driven", 0));
        checkBox_ModDri_Save->setText(QApplication::translate("3D_InspectionClass", "Save", 0));
        groupBox_16->setTitle(QApplication::translate("3D_InspectionClass", "Frame Based Scanning", 0));
        groupBox_17->setTitle(QApplication::translate("3D_InspectionClass", "Spheres Detection", 0));
        label_OBBSizeTolerance_2->setText(QApplication::translate("3D_InspectionClass", "Min Points", 0));
        label_Frame_DistThresh->setText(QApplication::translate("3D_InspectionClass", "DistThresh", 0));
        label_Frame_RadiusMin->setText(QApplication::translate("3D_InspectionClass", "Radius Min", 0));
        label_Frame_RadiusMax->setText(QApplication::translate("3D_InspectionClass", "Radius max", 0));
        label_OBBSizeTolerance_3->setText(QApplication::translate("3D_InspectionClass", "Max Points", 0));
        label_OBBSizeTolerance_4->setText(QApplication::translate("3D_InspectionClass", "Min Point Detected", 0));
        Matching->setTitle(QApplication::translate("3D_InspectionClass", "Matching", 0));
        label_Frame_DistThresh_2->setText(QApplication::translate("3D_InspectionClass", "Matching Thresh", 0));
        checkBox_FrameScan_ModeDriven->setText(QApplication::translate("3D_InspectionClass", "Model Driven", 0));
        checkBox_FrameScan_Save->setText(QApplication::translate("3D_InspectionClass", "Save", 0));
        label_OBBSizeTolerance_12->setText(QApplication::translate("3D_InspectionClass", "Overlap Toler", 0));
        checkBox_FrameScan_ICP->setText(QApplication::translate("3D_InspectionClass", "ICP", 0));
        groupBox_18->setTitle(QApplication::translate("3D_InspectionClass", "Pre-Processing", 0));
        label_OBBSizeTolerance_5->setText(QApplication::translate("3D_InspectionClass", "Min Points Seg", 0));
        label_OBBSizeTolerance_6->setText(QApplication::translate("3D_InspectionClass", "Euclidean Seg", 0));
        label_OBBSizeTolerance_7->setText(QApplication::translate("3D_InspectionClass", "Denoise", 0));
        label_OBBSizeTolerance_13->setText(QApplication::translate("3D_InspectionClass", "Denoise Seg:", 0));
        label_Frame_DistThresh_3->setText(QApplication::translate("3D_InspectionClass", "Object Size:", 0));
        checkBox_Frame_CaliFix->setText(QApplication::translate("3D_InspectionClass", "Calibration Fix", 0));
        Parameters->setTabText(Parameters->indexOf(tab_2), QApplication::translate("3D_InspectionClass", "Parameters", 0));
        menuFile->setTitle(QApplication::translate("3D_InspectionClass", "File", 0));
        menuPre_Processing->setTitle(QApplication::translate("3D_InspectionClass", "Pre-Processing", 0));
        menuRecognition->setTitle(QApplication::translate("3D_InspectionClass", "Recognition", 0));
        menuHelp->setTitle(QApplication::translate("3D_InspectionClass", "Help", 0));
        menuSegmentation->setTitle(QApplication::translate("3D_InspectionClass", "Segmentation", 0));
        menuAuto_Mode->setTitle(QApplication::translate("3D_InspectionClass", "Auto-Mode", 0));
        menuTest_Mode->setTitle(QApplication::translate("3D_InspectionClass", "Test-Mode", 0));
        menuFrame_Calibration_2->setTitle(QApplication::translate("3D_InspectionClass", "Frame Calibration", 0));
        menuFrame_Scan->setTitle(QApplication::translate("3D_InspectionClass", "Frame Scan", 0));
        menuTool->setTitle(QApplication::translate("3D_InspectionClass", "Tools", 0));
        menuExamples->setTitle(QApplication::translate("3D_InspectionClass", "Examples", 0));
        menuVirtual_Camera->setTitle(QApplication::translate("3D_InspectionClass", "Virtual Camera", 0));
        action_Rotational_Table->setTitle(QApplication::translate("3D_InspectionClass", "Rotational Table", 0));
        menuRegistration->setTitle(QApplication::translate("3D_InspectionClass", "Registration", 0));
        menuLoad_Point_Clouds->setTitle(QApplication::translate("3D_InspectionClass", "Update", 0));
        menuCoarse_Registration->setTitle(QApplication::translate("3D_InspectionClass", "Coarse Registration", 0));
        menuRefine_Registration->setTitle(QApplication::translate("3D_InspectionClass", "Refine Registration", 0));
    } // retranslateUi

};

namespace Ui {
    class 3D_InspectionClass: public Ui_3D_InspectionClass {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_3D_Inspection_H
